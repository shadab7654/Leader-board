{"ast":null,"code":"import _sortBy from 'lodash/sortBy';\nimport _isFunction from 'lodash/isFunction';\nimport _range from 'lodash/range';\nimport _isNil from 'lodash/isNil';\nimport _throttle from 'lodash/throttle';\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Surface from '../container/Surface';\nimport Layer from '../container/Layer';\nimport Tooltip from '../component/Tooltip';\nimport Legend from '../component/Legend';\nimport { warn } from '../util/LogUtils';\nimport { findAllByType, findChildByType, filterSvgElements, getDisplayName, getPresentationAttributes, validateWidthHeight, isChildrenEqual } from '../util/ReactUtils';\nimport CartesianAxis from '../cartesian/CartesianAxis';\nimport CartesianGrid from '../cartesian/CartesianGrid';\nimport ReferenceLine from '../cartesian/ReferenceLine';\nimport ReferenceDot from '../cartesian/ReferenceDot';\nimport ReferenceArea from '../cartesian/ReferenceArea';\nimport XAxis from '../cartesian/XAxis';\nimport YAxis from '../cartesian/YAxis';\nimport Brush from '../cartesian/Brush';\nimport { getOffset, calculateChartCoordinate } from '../util/DOMUtils';\nimport { parseSpecifiedDomain, getAnyElementOfObject, hasDuplicate, checkDomainOfScale, combineEventHandlers, parseScale, getValueByDataKey, uniqueId } from '../util/DataUtils';\nimport { calculateActiveTickIndex, detectReferenceElementsDomain, getMainColorOfGraphicItem, getDomainOfStackGroups, getDomainOfDataByKey, getLegendProps, getDomainOfItemsWithSameAxis, getCoordinatesOfGrid, getStackGroupsByAxisId, getTicksOfAxis, isCategorialAxis, getTicksOfScale, appendOffsetOfLegend } from '../util/CartesianUtils';\nimport { shallowEqual } from '../util/PureRender';\nimport { eventCenter, SYNC_EVENT } from '../util/Events';\nvar ORIENT_MAP = {\n  xAxis: ['bottom', 'top'],\n  yAxis: ['left', 'right']\n};\nvar originCoordinate = {\n  x: 0,\n  y: 0\n};\nvar generateCategoricalChart = function generateCategoricalChart(ChartComponent, GraphicalChild) {\n  var _class, _temp;\n  var CategoricalChartWrapper = (_temp = _class = function (_Component) {\n    _inherits(CategoricalChartWrapper, _Component);\n    function CategoricalChartWrapper(props) {\n      _classCallCheck(this, CategoricalChartWrapper);\n      var _this = _possibleConstructorReturn(this, (CategoricalChartWrapper.__proto__ || Object.getPrototypeOf(CategoricalChartWrapper)).call(this, props));\n      _this.handleLegendBBoxUpdate = function (box) {\n        if (box && _this.legendInstance) {\n          var _this$state = _this.state,\n            dataStartIndex = _this$state.dataStartIndex,\n            dataEndIndex = _this$state.dataEndIndex;\n          _this.setState(_this.updateStateOfAxisMapsOffsetAndStackGroups({\n            props: _this.props,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          }));\n        }\n      };\n      _this.handleReceiveSyncEvent = function (cId, chartId, data) {\n        var _this$props = _this.props,\n          syncId = _this$props.syncId,\n          layout = _this$props.layout;\n        if (syncId === cId && chartId !== _this.uniqueChartId) {\n          var dataStartIndex = data.dataStartIndex,\n            dataEndIndex = data.dataEndIndex;\n          if (!_isNil(data.dataStartIndex) || !_isNil(data.dataEndIndex)) {\n            _this.setState(_extends({\n              dataStartIndex: dataStartIndex,\n              dataEndIndex: dataEndIndex\n            }, _this.updateStateOfAxisMapsOffsetAndStackGroups({\n              props: _this.props,\n              dataStartIndex: dataStartIndex,\n              dataEndIndex: dataEndIndex\n            })));\n          } else if (!_isNil(data.activeTooltipIndex)) {\n            var chartX = data.chartX,\n              chartY = data.chartY,\n              activeTooltipIndex = data.activeTooltipIndex;\n            var _this$state2 = _this.state,\n              offset = _this$state2.offset,\n              tooltipTicks = _this$state2.tooltipTicks;\n            if (!offset) {\n              return;\n            }\n            var viewBox = _extends({}, offset, {\n              x: offset.left,\n              y: offset.top\n            });\n            // When a categotical chart is combined with another chart, the value of chartX\n            // and chartY may beyond the boundaries.\n            var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);\n            var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);\n            var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;\n            var activePayload = _this.getTooltipContent(activeTooltipIndex);\n            var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {\n              x: layout === 'horizontal' ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,\n              y: layout === 'horizontal' ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate\n            } : originCoordinate;\n            _this.setState(_extends({}, data, {\n              activeLabel: activeLabel,\n              activeCoordinate: activeCoordinate,\n              activePayload: activePayload\n            }));\n          } else {\n            _this.setState(data);\n          }\n        }\n      };\n      _this.handleBrushChange = function (_ref) {\n        var startIndex = _ref.startIndex,\n          endIndex = _ref.endIndex;\n\n        // Only trigger changes if the extents of the brush have actually changed\n        if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {\n          _this.setState(_extends({\n            dataStartIndex: startIndex,\n            dataEndIndex: endIndex\n          }, _this.updateStateOfAxisMapsOffsetAndStackGroups({\n            props: _this.props,\n            dataStartIndex: startIndex,\n            dataEndIndex: endIndex\n          })));\n          _this.triggerSyncEvent({\n            dataStartIndex: startIndex,\n            dataEndIndex: endIndex\n          });\n        }\n      };\n      _this.handleMouseEnter = function (e) {\n        var onMouseEnter = _this.props.onMouseEnter;\n        var mouse = _this.getMouseInfo(e);\n        if (mouse) {\n          var nextState = _extends({}, mouse, {\n            isTooltipActive: true\n          });\n          _this.setState(nextState);\n          _this.triggerSyncEvent(nextState);\n          if (_isFunction(onMouseEnter)) {\n            onMouseEnter(nextState, e);\n          }\n        }\n      };\n      _this.triggeredAfterMouseMove = function (e) {\n        var onMouseMove = _this.props.onMouseMove;\n        var mouse = _this.getMouseInfo(e);\n        var nextState = mouse ? _extends({}, mouse, {\n          isTooltipActive: true\n        }) : {\n          isTooltipActive: false\n        };\n        _this.setState(nextState);\n        _this.triggerSyncEvent(nextState);\n        if (_isFunction(onMouseMove)) {\n          onMouseMove(nextState, e);\n        }\n      };\n      _this.handleMouseMove = function (e) {\n        if (e && _isFunction(e.persist)) {\n          e.persist();\n          _this.triggeredAfterMouseMove(e);\n        }\n      };\n      _this.handleMouseLeave = function (e) {\n        var onMouseLeave = _this.props.onMouseLeave;\n        var nextState = {\n          isTooltipActive: false\n        };\n        _this.setState(nextState);\n        _this.triggerSyncEvent(nextState);\n        if (_isFunction(onMouseLeave)) {\n          onMouseLeave(nextState, e);\n        }\n      };\n      _this.handleClick = function (e) {\n        var onClick = _this.props.onClick;\n        if (_isFunction(onClick)) {\n          var mouse = _this.getMouseInfo(e);\n          onClick(mouse, e);\n        }\n      };\n      _this.handleMouseDown = function (e) {\n        var onMouseDown = _this.props.onMouseDown;\n        if (_isFunction(onMouseDown)) {\n          var mouse = _this.getMouseInfo(e);\n          onMouseDown(mouse, e);\n        }\n      };\n      _this.handleMouseUp = function (e) {\n        var onMouseUp = _this.props.onMouseUp;\n        if (_isFunction(onMouseUp)) {\n          var mouse = _this.getMouseInfo(e);\n          onMouseUp(mouse, e);\n        }\n      };\n      _this.handleTouchMove = function (e) {\n        if (e.changedTouches != null && e.changedTouches.length > 0) {\n          _this.handleMouseMove(e.changedTouches[0]);\n        }\n      };\n      _this.verticalCoordinatesGenerator = function (_ref2) {\n        var xAxis = _ref2.xAxis,\n          width = _ref2.width,\n          height = _ref2.height,\n          offset = _ref2.offset;\n        return getCoordinatesOfGrid(CartesianAxis.getTicks(_extends({}, CartesianAxis.defaultProps, xAxis, {\n          ticks: getTicksOfAxis(xAxis, true),\n          viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          }\n        })), offset.left, offset.left + offset.width);\n      };\n      _this.horizontalCoordinatesGenerator = function (_ref3) {\n        var yAxis = _ref3.yAxis,\n          width = _ref3.width,\n          height = _ref3.height,\n          offset = _ref3.offset;\n        return getCoordinatesOfGrid(CartesianAxis.getTicks(_extends({}, CartesianAxis.defaultProps, yAxis, {\n          ticks: getTicksOfAxis(yAxis, true),\n          viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          }\n        })), offset.top, offset.top + offset.height);\n      };\n      _this.axesTicksGenerator = function (axis) {\n        return getTicksOfAxis(axis, true);\n      };\n      _this.tooltipTicksGenerator = function (_ref4) {\n        var layout = _ref4.layout,\n          xAxisMap = _ref4.xAxisMap,\n          yAxisMap = _ref4.yAxisMap;\n        var axisMap = layout === 'horizontal' ? xAxisMap : yAxisMap;\n        var axis = getAnyElementOfObject(axisMap);\n        var tooltipTicks = getTicksOfAxis(axis, false, true);\n        return {\n          tooltipTicks: tooltipTicks,\n          orderedTooltipTicks: _sortBy(tooltipTicks, function (o) {\n            return o.coordinate;\n          }),\n          tooltipAxis: axis\n        };\n      };\n      var defaultState = _this.createDefaultState(props);\n      _this.state = _extends({}, defaultState, {\n        updateId: 0\n      }, _this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({\n        props: props\n      }, defaultState)));\n      _this.validateAxes();\n      _this.uniqueChartId = uniqueId('recharts');\n      if (props.throttleDelay) {\n        _this.triggeredAfterMouseMove = _throttle(_this.triggeredAfterMouseMove, props.throttleDelay);\n      }\n      return _this;\n    }\n\n    /* eslint-disable  react/no-did-mount-set-state */\n\n    _createClass(CategoricalChartWrapper, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (!_isNil(this.props.syncId)) {\n          this.addListener();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        var _props = this.props,\n          data = _props.data,\n          children = _props.children,\n          width = _props.width,\n          height = _props.height,\n          layout = _props.layout,\n          stackOffset = _props.stackOffset,\n          margin = _props.margin;\n        if (nextProps.data !== data || nextProps.width !== width || nextProps.height !== height || nextProps.layout !== layout || nextProps.stackOffset !== stackOffset || !shallowEqual(nextProps.margin, margin)) {\n          var defaultState = this.createDefaultState(nextProps);\n          this.setState(_extends({}, defaultState, {\n            updateId: this.state.updateId + 1\n          }, this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({\n            props: nextProps\n          }, defaultState))));\n        } else if (!isChildrenEqual(nextProps.children, children)) {\n          var _state = this.state,\n            dataStartIndex = _state.dataStartIndex,\n            dataEndIndex = _state.dataEndIndex;\n          // Don't update brush\n\n          var _defaultState = _extends({}, this.createDefaultState(nextProps), {\n            dataEndIndex: dataEndIndex,\n            dataStartIndex: dataStartIndex\n          });\n          this.setState(_extends({}, _defaultState, this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({\n            props: nextProps\n          }, _defaultState))));\n        }\n        // add syncId\n        if (_isNil(this.props.syncId) && !_isNil(nextProps.syncId)) {\n          this.addListener();\n        }\n        // remove syncId\n        if (!_isNil(this.props.syncId) && _isNil(nextProps.syncId)) {\n          this.removeListener();\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (!_isNil(this.props.syncId)) {\n          this.removeListener();\n        }\n        if (typeof this.triggeredAfterMouseMove.cancel === 'function') {\n          this.triggeredAfterMouseMove.cancel();\n        }\n      }\n      /**\n      * Get the configuration of all x-axis or y-axis\n      * @param  {Object} props          Latest props\n      * @param  {String} axisType       The type of axis\n      * @param  {Array}  graphicalItems The instances of item\n      * @param  {Object} stackGroups    The items grouped by axisId and stackId\n      * @param {Number} dataStartIndex  The start index of the data series when a brush is applied\n      * @param {Number} dataEndIndex    The end index of the data series when a brush is applied\n      * @return {Object}          Configuration\n      */\n    }, {\n      key: 'getAxisMap',\n      value: function getAxisMap(props, _ref5) {\n        var _ref5$axisType = _ref5.axisType,\n          axisType = _ref5$axisType === undefined ? 'xAxis' : _ref5$axisType,\n          graphicalItems = _ref5.graphicalItems,\n          stackGroups = _ref5.stackGroups,\n          dataStartIndex = _ref5.dataStartIndex,\n          dataEndIndex = _ref5.dataEndIndex;\n        var children = props.children;\n        var Axis = axisType === 'xAxis' ? XAxis : YAxis;\n        var axisIdKey = axisType === 'xAxis' ? 'xAxisId' : 'yAxisId';\n        // Get all the instance of Axis\n        var axes = findAllByType(children, Axis);\n        var axisMap = {};\n        if (axes && axes.length) {\n          axisMap = this.getAxisMapByAxes(props, {\n            axes: axes,\n            graphicalItems: graphicalItems,\n            axisType: axisType,\n            axisIdKey: axisIdKey,\n            stackGroups: stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          });\n        } else if (graphicalItems && graphicalItems.length) {\n          axisMap = this.getAxisMapByItems(props, {\n            graphicalItems: graphicalItems,\n            Axis: Axis,\n            axisType: axisType,\n            axisIdKey: axisIdKey,\n            stackGroups: stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          });\n        }\n        return axisMap;\n      }\n\n      /**\n       * Get the configuration of axis by the options of axis instance\n       * @param  {Object} props         Latest props\n       * @param {Array}  axes           The instance of axes\n       * @param  {Array} graphicalItems The instances of item\n       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n       * @param  {String} axisIdKey     The unique id of an axis\n       * @param  {Object} stackGroups   The items grouped by axisId and stackId\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n       * @return {Object}      Configuration\n       */\n    }, {\n      key: 'getAxisMapByAxes',\n      value: function getAxisMapByAxes(props, _ref6) {\n        var axes = _ref6.axes,\n          graphicalItems = _ref6.graphicalItems,\n          axisType = _ref6.axisType,\n          axisIdKey = _ref6.axisIdKey,\n          stackGroups = _ref6.stackGroups,\n          dataStartIndex = _ref6.dataStartIndex,\n          dataEndIndex = _ref6.dataEndIndex;\n        var layout = props.layout,\n          children = props.children,\n          data = props.data,\n          stackOffset = props.stackOffset;\n        var displayedData = data.slice(dataStartIndex, dataEndIndex + 1);\n        var len = displayedData.length;\n        var isCategorial = isCategorialAxis(layout, axisType);\n\n        // Eliminate duplicated axes\n        var axisMap = axes.reduce(function (result, child) {\n          var _child$props = child.props,\n            type = _child$props.type,\n            dataKey = _child$props.dataKey,\n            allowDataOverflow = _child$props.allowDataOverflow,\n            scale = _child$props.scale;\n          var axisId = child.props[axisIdKey];\n          if (!result[axisId]) {\n            var domain = void 0,\n              duplicateDomain = void 0,\n              categoricalDomain = void 0;\n            if (dataKey) {\n              domain = getDomainOfDataByKey(displayedData, dataKey, type);\n              if (type === 'category' && isCategorial) {\n                var duplicate = hasDuplicate(domain);\n                duplicateDomain = duplicate ? domain : null;\n\n                // When category axis has duplicated text, serial numbers are used to generate scale\n                domain = duplicate ? _range(0, len) : domain;\n              } else if (type === 'category') {\n                // eliminate undefined or null or empty string\n                domain = domain.filter(function (entry) {\n                  return entry !== '' && !_isNil(entry);\n                });\n              }\n              if (isCategorial && (type === 'number' || scale !== 'auto')) {\n                categoricalDomain = getDomainOfDataByKey(displayedData, dataKey, 'category');\n              }\n            } else if (isCategorial) {\n              domain = _range(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === 'number') {\n              // when stackOffset is 'expand', the domain may be calculated as [0, 1.000000000002]\n              domain = stackOffset === 'expand' ? [0, 1] : getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n            } else {\n              domain = getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function (entry) {\n                return entry.props[axisIdKey] === axisId;\n              }), type, true);\n            }\n            if (type === 'number') {\n              // To detect wether there is any reference lines whose props alwaysShow is true\n              domain = detectReferenceElementsDomain(children, domain, axisId, axisType);\n              if (child.props.domain) {\n                domain = parseSpecifiedDomain(child.props.domain, domain, allowDataOverflow);\n              }\n            }\n            return _extends({}, result, _defineProperty({}, axisId, _extends({}, child.props, {\n              axisType: axisType,\n              domain: domain,\n              categoricalDomain: categoricalDomain,\n              duplicateDomain: duplicateDomain,\n              originalDomain: child.props.domain,\n              isCategorial: isCategorial\n            })));\n          }\n          return result;\n        }, {});\n        return axisMap;\n      }\n\n      /**\n       * Get the configuration of axis by the options of item,\n       * this kind of axis does not display in chart\n       * @param  {Object} props         Latest props\n       * @param  {Array} graphicalItems The instances of item\n       * @param  {ReactElement} Axis    Axis Component\n       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n       * @param  {String} axisIdKey     The unique id of an axis\n       * @param  {Object} stackGroups   The items grouped by axisId and stackId\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n       * @return {Object}               Configuration\n       */\n    }, {\n      key: 'getAxisMapByItems',\n      value: function getAxisMapByItems(props, _ref7) {\n        var graphicalItems = _ref7.graphicalItems,\n          Axis = _ref7.Axis,\n          axisType = _ref7.axisType,\n          axisIdKey = _ref7.axisIdKey,\n          stackGroups = _ref7.stackGroups,\n          dataStartIndex = _ref7.dataStartIndex,\n          dataEndIndex = _ref7.dataEndIndex;\n        var layout = props.layout,\n          children = props.children,\n          data = props.data;\n        var displayedData = data.slice(dataStartIndex, dataEndIndex + 1);\n        var len = displayedData.length;\n        var isCategorial = isCategorialAxis(layout, axisType);\n        var index = -1;\n\n        // The default type of x-axis is category axis,\n        // The default contents of x-axis is the serial numbers of data\n        // The default type of y-axis is number axis\n        // The default contents of y-axis is the domain of data\n        var axisMap = graphicalItems.reduce(function (result, child) {\n          var axisId = child.props[axisIdKey];\n          if (!result[axisId]) {\n            index++;\n            var domain = void 0;\n            if (isCategorial) {\n              domain = _range(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {\n              domain = getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n              domain = detectReferenceElementsDomain(children, domain, axisId, axisType);\n            } else {\n              domain = parseSpecifiedDomain(Axis.defaultProps.domain, getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function (entry) {\n                return entry.props[axisIdKey] === axisId;\n              }), 'number'), Axis.defaultProps.allowDataOverflow);\n              domain = detectReferenceElementsDomain(children, domain, axisId, axisType);\n            }\n            return _extends({}, result, _defineProperty({}, axisId, _extends({\n              axisType: axisType\n            }, Axis.defaultProps, {\n              hide: true,\n              orientation: ORIENT_MAP[axisType][index % 2],\n              domain: domain,\n              originalDomain: Axis.defaultProps.domain,\n              isCategorial: isCategorial\n            })));\n          }\n          return result;\n        }, {});\n        return axisMap;\n      }\n      /**\n       * Calculate the scale function, position, width, height of axes\n       * @param  {Object} props    Latest props\n       * @param  {Object} axisMap  The configuration of axes\n       * @param  {Object} offset   The offset of main part in the svg element\n       * @param  {Object} axisType The type of axes, x-axis or y-axis\n       * @return {Object} Configuration\n       */\n    }, {\n      key: 'getFormatAxisMap',\n      value: function getFormatAxisMap(props, axisMap, offset, axisType) {\n        var width = props.width,\n          height = props.height,\n          layout = props.layout;\n        var displayName = this.constructor.displayName;\n        var ids = Object.keys(axisMap);\n        var steps = {\n          left: offset.left,\n          leftMirror: offset.left,\n          right: width - offset.right,\n          rightMirror: width - offset.right,\n          top: offset.top,\n          topMirror: offset.top,\n          bottom: height - offset.bottom,\n          bottomMirror: height - offset.bottom\n        };\n        return ids.reduce(function (result, id) {\n          var axis = axisMap[id];\n          var orientation = axis.orientation,\n            domain = axis.domain,\n            _axis$padding = axis.padding,\n            padding = _axis$padding === undefined ? {} : _axis$padding,\n            mirror = axis.mirror,\n            reversed = axis.reversed;\n          var offsetKey = '' + orientation + (mirror ? 'Mirror' : '');\n          var range = void 0,\n            x = void 0,\n            y = void 0,\n            needSpace = void 0;\n          if (axisType === 'xAxis') {\n            range = [offset.left + (padding.left || 0), offset.left + offset.width - (padding.right || 0)];\n          } else {\n            range = layout === 'horizontal' ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0), offset.top + offset.height - (padding.bottom || 0)];\n          }\n          if (reversed) {\n            range = [range[1], range[0]];\n          }\n          var scale = parseScale(axis, displayName);\n          scale.domain(domain).range(range);\n          checkDomainOfScale(scale);\n          var ticks = getTicksOfScale(scale, axis);\n          if (axisType === 'xAxis') {\n            needSpace = orientation === 'top' && !mirror || orientation === 'bottom' && mirror;\n            x = offset.left;\n            y = steps[offsetKey] - needSpace * axis.height;\n          } else {\n            needSpace = orientation === 'left' && !mirror || orientation === 'right' && mirror;\n            x = steps[offsetKey] - needSpace * axis.width;\n            y = offset.top;\n          }\n          var finalAxis = _extends({}, axis, ticks, {\n            range: range,\n            x: x,\n            y: y,\n            scale: scale,\n            width: axisType === 'xAxis' ? offset.width : axis.width,\n            height: axisType === 'yAxis' ? offset.height : axis.height\n          });\n          if (!axis.hide && axisType === 'xAxis') {\n            steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;\n          } else if (!axis.hide) {\n            steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;\n          }\n          return _extends({}, result, _defineProperty({}, id, finalAxis));\n        }, {});\n      }\n      /**\n       * Get the information of mouse in chart, return null when the mouse is not in the chart\n       * @param  {Object} event    The event object\n       * @return {Object}          Mouse data\n       */\n    }, {\n      key: 'getMouseInfo',\n      value: function getMouseInfo(event) {\n        if (!this.container) {\n          return null;\n        }\n        var offset = this.state.offset;\n        var containerOffset = getOffset(this.container);\n        var e = calculateChartCoordinate(event, containerOffset);\n        var isIn = e.chartX >= offset.left && e.chartX <= offset.left + offset.width && e.chartY >= offset.top && e.chartY <= offset.top + offset.height;\n        if (!isIn) {\n          return null;\n        }\n        var layout = this.props.layout;\n        var _state2 = this.state,\n          ticks = _state2.orderedTooltipTicks,\n          axis = _state2.tooltipAxis,\n          tooltipTicks = _state2.tooltipTicks;\n        var pos = layout === 'horizontal' ? e.chartX : e.chartY;\n        var activeIndex = calculateActiveTickIndex(pos, ticks, axis);\n        if (activeIndex >= 0) {\n          var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;\n          var activePayload = this.getTooltipContent(activeIndex);\n          var activeCoordinate = tooltipTicks[activeIndex] ? {\n            x: layout === 'horizontal' ? tooltipTicks[activeIndex].coordinate : e.chartX,\n            y: layout === 'horizontal' ? e.chartY : tooltipTicks[activeIndex].coordinate\n          } : originCoordinate;\n          return _extends({}, e, {\n            activeTooltipIndex: activeIndex,\n            activeLabel: activeLabel,\n            activePayload: activePayload,\n            activeCoordinate: activeCoordinate\n          });\n        }\n        return null;\n      }\n      /**\n       * Get the content to be displayed in the tooltip\n       * @param  {Number} activeIndex    Active index of data\n       * @return {Array}                 The content of tooltip\n       */\n    }, {\n      key: 'getTooltipContent',\n      value: function getTooltipContent(activeIndex) {\n        var _state3 = this.state,\n          dataStartIndex = _state3.dataStartIndex,\n          dataEndIndex = _state3.dataEndIndex,\n          graphicalItems = _state3.graphicalItems;\n        var data = this.props.data.slice(dataStartIndex, dataEndIndex + 1);\n        if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= data.length) {\n          return null;\n        }\n        return graphicalItems.map(function (child) {\n          var _child$props2 = child.props,\n            dataKey = _child$props2.dataKey,\n            name = _child$props2.name,\n            unit = _child$props2.unit,\n            formatter = _child$props2.formatter;\n          return _extends({}, getPresentationAttributes(child), {\n            dataKey: dataKey,\n            unit: unit,\n            formatter: formatter,\n            name: name || dataKey,\n            color: getMainColorOfGraphicItem(child),\n            value: getValueByDataKey(data[activeIndex], dataKey),\n            payload: data[activeIndex]\n          });\n        });\n      }\n\n      /**\n       * The AxisMaps are expensive to render on large data sets\n       * so provide the ability to store them in state and only update them when necessary\n       * they are dependent upon the start and end index of\n       * the brush so it's important that this method is called _after_\n       * the state is updated with any new start/end indices\n       *\n       * @param {Object} props The props object to be used for updating the axismaps\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex The end index of the data series when a brush is applied\n       * @return {Object} state New state to set\n       */\n    }, {\n      key: 'updateStateOfAxisMapsOffsetAndStackGroups',\n      value: function updateStateOfAxisMapsOffsetAndStackGroups(_ref8) {\n        var props = _ref8.props,\n          dataStartIndex = _ref8.dataStartIndex,\n          dataEndIndex = _ref8.dataEndIndex;\n        var data = props.data;\n        if (!validateWidthHeight({\n          props: props\n        }) || !data || !data.length) {\n          return null;\n        }\n        var children = props.children,\n          layout = props.layout,\n          stackOffset = props.stackOffset;\n        var numericIdName = layout === 'horizontal' ? 'yAxis' : 'xAxis';\n        var cateIdName = layout === 'horizontal' ? 'xAxis' : 'yAxis';\n        var graphicalItems = findAllByType(children, GraphicalChild);\n        var stackGroups = getStackGroupsByAxisId(data, graphicalItems, numericIdName + 'Id', cateIdName + 'Id', stackOffset);\n        var xAxisMap = this.getAxisMap(props, {\n          axisType: 'xAxis',\n          graphicalItems: graphicalItems,\n          stackGroups: numericIdName === 'xAxis' && stackGroups,\n          dataStartIndex: dataStartIndex,\n          dataEndIndex: dataEndIndex\n        });\n        var yAxisMap = this.getAxisMap(props, {\n          axisType: 'yAxis',\n          graphicalItems: graphicalItems,\n          stackGroups: numericIdName === 'yAxis' && stackGroups,\n          dataStartIndex: dataStartIndex,\n          dataEndIndex: dataEndIndex\n        });\n        var offset = this.calculateOffset(props, graphicalItems, xAxisMap, yAxisMap);\n        xAxisMap = this.getFormatAxisMap(props, xAxisMap, offset, 'xAxis');\n        yAxisMap = this.getFormatAxisMap(props, yAxisMap, offset, 'yAxis');\n        var ticksObj = this.tooltipTicksGenerator({\n          layout: layout,\n          xAxisMap: xAxisMap,\n          yAxisMap: yAxisMap\n        });\n        return _extends({\n          graphicalItems: graphicalItems,\n          xAxisMap: xAxisMap,\n          yAxisMap: yAxisMap,\n          offset: offset,\n          stackGroups: stackGroups\n        }, ticksObj);\n      }\n\n      /* eslint-disable  no-underscore-dangle */\n    }, {\n      key: 'addListener',\n      value: function addListener() {\n        eventCenter.on(SYNC_EVENT, this.handleReceiveSyncEvent);\n        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {\n          eventCenter.setMaxListeners(eventCenter._maxListeners + 1);\n        }\n      }\n    }, {\n      key: 'removeListener',\n      value: function removeListener() {\n        eventCenter.removeListener(SYNC_EVENT, this.handleReceiveSyncEvent);\n        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {\n          eventCenter.setMaxListeners(eventCenter._maxListeners - 1);\n        }\n      }\n      /**\n       * Returns default, reset state for the categorical chart.\n       * @param {Object} props Props object to use when creating the default state\n       * @return {Object} Whole new state\n       */\n    }, {\n      key: 'createDefaultState',\n      value: function createDefaultState(props) {\n        var children = props.children;\n        var brushItem = findChildByType(children, Brush);\n        var startIndex = brushItem && brushItem.props && brushItem.props.startIndex || 0;\n        var endIndex = brushItem && brushItem.props && brushItem.props.endIndex || props.data && props.data.length - 1 || 0;\n        return {\n          chartX: 0,\n          chartY: 0,\n          dataStartIndex: startIndex,\n          dataEndIndex: endIndex,\n          activeTooltipIndex: -1,\n          isTooltipActive: false\n        };\n      }\n      /**\n       * Calculate the offset of main part in the svg element\n       * @param  {Object} props          Latest props\n       * @param  {Array}  graphicalItems The instances of item\n       * @param  {Object} xAxisMap       The configuration of x-axis\n       * @param  {Object} yAxisMap       The configuration of y-axis\n       * @return {Object} The offset of main part in the svg element\n       */\n    }, {\n      key: 'calculateOffset',\n      value: function calculateOffset(props, graphicalItems, xAxisMap, yAxisMap) {\n        var width = props.width,\n          height = props.height,\n          children = props.children;\n        var margin = props.margin || {};\n        var brushItem = findChildByType(children, Brush);\n        var legendItem = findChildByType(children, Legend);\n        var offsetH = Object.keys(yAxisMap).reduce(function (result, id) {\n          var entry = yAxisMap[id];\n          var orientation = entry.orientation;\n          if (!entry.mirror && !entry.hide) {\n            return _extends({}, result, _defineProperty({}, orientation, result[orientation] + entry.width));\n          }\n          return result;\n        }, {\n          left: margin.left || 0,\n          right: margin.right || 0\n        });\n        var offsetV = Object.keys(xAxisMap).reduce(function (result, id) {\n          var entry = xAxisMap[id];\n          var orientation = entry.orientation;\n          if (!entry.mirror && !entry.hide) {\n            return _extends({}, result, _defineProperty({}, orientation, result[orientation] + entry.height));\n          }\n          return result;\n        }, {\n          top: margin.top || 0,\n          bottom: margin.bottom || 0\n        });\n        var offset = _extends({}, offsetV, offsetH);\n        var brushBottom = offset.bottom;\n        if (brushItem) {\n          offset.bottom += brushItem.props.height || Brush.defaultProps.height;\n        }\n        if (legendItem && this.legendInstance) {\n          var legendBox = this.legendInstance.getBBox();\n          offset = appendOffsetOfLegend(offset, graphicalItems, props, legendBox);\n        }\n        return _extends({\n          brushBottom: brushBottom\n        }, offset, {\n          width: width - offset.left - offset.right,\n          height: height - offset.top - offset.bottom\n        });\n      }\n      /**\n       * The handler of mouse entering chart\n       * @param  {Object} e              Event object\n       * @return {Null}                  null\n       */\n\n      /**\n       * The handler of mouse moving in chart\n       * @param  {Object} e        Event object\n       * @return {Null} no return\n       */\n\n      /**\n       * The handler if mouse leaving chart\n       * @param {Object} e Event object\n       * @return {Null} no return\n       */\n    }, {\n      key: 'validateAxes',\n      value: function validateAxes() {\n        var _props2 = this.props,\n          layout = _props2.layout,\n          children = _props2.children;\n        var xAxes = findAllByType(children, XAxis);\n        var yAxes = findAllByType(children, YAxis);\n        if (layout === 'horizontal' && xAxes && xAxes.length) {\n          xAxes.forEach(function (axis) {\n            warn(axis.props.type === 'category' || axis.props.type === 'number' && !_isNil(axis.props.dataKey), 'x-axis should be a category axis or a number axis which has specifed dataKey\\n             when the layout is horizontal');\n          });\n        } else if (layout === 'vertical') {\n          var displayName = this.constructor.displayName;\n          warn(yAxes && yAxes.length, 'You should add <YAxis type=\"number\" /> in ' + displayName + '.\\n           The layout is vertical now, y-axis should be category axis,\\n           but y-axis is number axis when no YAxis is added.');\n          warn(xAxes && xAxes.length, 'You should add <XAxis /> in ' + displayName + '.\\n          The layout is vertical now, x-axis is category when no XAxis is added.');\n          if (yAxes && yAxes.length) {\n            yAxes.forEach(function (axis) {\n              warn(axis.props.type === 'category' || axis.props.type === 'number' && !_isNil(axis.props.dataKey), 'y-axis should be a category axis or a number axis which has specifed dataKey\\n               when the layout is vertical');\n            });\n          }\n        }\n        return null;\n      }\n    }, {\n      key: 'triggerSyncEvent',\n      value: function triggerSyncEvent(data) {\n        var syncId = this.props.syncId;\n        if (!_isNil(syncId)) {\n          eventCenter.emit(SYNC_EVENT, syncId, this.uniqueChartId, data);\n        }\n      }\n    }, {\n      key: 'renderAxes',\n      /**\n       * Draw axes\n       * @param {Object} axisMap The configuration of all x-axes or y-axes\n       * @param {String} name    The name of axes\n       * @return {ReactElement}  The instance of x-axes\n       */\n      value: function renderAxes(axisMap, name) {\n        var _props3 = this.props,\n          width = _props3.width,\n          height = _props3.height;\n        var ids = axisMap && Object.keys(axisMap);\n        if (ids && ids.length) {\n          var axes = [];\n          for (var i = 0, len = ids.length; i < len; i++) {\n            var axis = axisMap[ids[i]];\n            if (!axis.hide) {\n              axes.push(React.createElement(CartesianAxis, _extends({}, axis, {\n                key: name + '-' + ids[i],\n                viewBox: {\n                  x: 0,\n                  y: 0,\n                  width: width,\n                  height: height\n                },\n                ticksGenerator: this.axesTicksGenerator\n              })));\n            }\n          }\n          return axes.length ? React.createElement(Layer, {\n            key: name + '-layer',\n            className: 'recharts-' + name\n          }, axes) : null;\n        }\n        return null;\n      }\n\n      /**\n       * Draw grid\n       * @return {ReactElement} The instance of grid\n       */\n    }, {\n      key: 'renderGrid',\n      value: function renderGrid() {\n        var _state4 = this.state,\n          xAxisMap = _state4.xAxisMap,\n          yAxisMap = _state4.yAxisMap,\n          offset = _state4.offset;\n        var _props4 = this.props,\n          children = _props4.children,\n          width = _props4.width,\n          height = _props4.height;\n        var gridItem = findChildByType(children, CartesianGrid);\n        if (!gridItem) {\n          return null;\n        }\n        var xAxis = getAnyElementOfObject(xAxisMap);\n        var yAxis = getAnyElementOfObject(yAxisMap);\n        return React.cloneElement(gridItem, {\n          key: 'grid',\n          x: offset.left,\n          y: offset.top,\n          width: offset.width,\n          height: offset.height,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          offset: offset,\n          chartWidth: width,\n          chartHeight: height,\n          verticalCoordinatesGenerator: this.verticalCoordinatesGenerator,\n          horizontalCoordinatesGenerator: this.horizontalCoordinatesGenerator\n        });\n      }\n      /**\n       * Draw legend\n       * @return {ReactElement}            The instance of Legend\n       */\n    }, {\n      key: 'renderLegend',\n      value: function renderLegend() {\n        var _this2 = this;\n        var graphicalItems = this.state.graphicalItems;\n        var _props5 = this.props,\n          children = _props5.children,\n          width = _props5.width,\n          height = _props5.height;\n        var margin = this.props.margin || {};\n        var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n        var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n        var props = getLegendProps(children, graphicalItems, legendWidth, legendHeight);\n        if (!props) {\n          return null;\n        }\n        return React.createElement(Legend, _extends({}, props, {\n          chartWidth: width,\n          chartHeight: height,\n          margin: margin,\n          ref: function ref(legend) {\n            _this2.legendInstance = legend;\n          },\n          onBBoxUpdate: this.handleLegendBBoxUpdate\n        }));\n      }\n\n      /**\n       * Draw Tooltip\n       * @return {ReactElement}  The instance of Tooltip\n       */\n    }, {\n      key: 'renderTooltip',\n      value: function renderTooltip() {\n        var children = this.props.children;\n        var tooltipItem = findChildByType(children, Tooltip);\n        if (!tooltipItem) {\n          return null;\n        }\n        var _state5 = this.state,\n          isTooltipActive = _state5.isTooltipActive,\n          activeCoordinate = _state5.activeCoordinate,\n          activePayload = _state5.activePayload,\n          activeLabel = _state5.activeLabel,\n          offset = _state5.offset;\n        return React.cloneElement(tooltipItem, {\n          viewBox: _extends({}, offset, {\n            x: offset.left,\n            y: offset.top\n          }),\n          active: isTooltipActive,\n          label: activeLabel,\n          payload: isTooltipActive ? activePayload : [],\n          coordinate: activeCoordinate\n        });\n      }\n    }, {\n      key: 'renderBrush',\n      value: function renderBrush() {\n        var _props6 = this.props,\n          children = _props6.children,\n          margin = _props6.margin,\n          data = _props6.data;\n        var _state6 = this.state,\n          offset = _state6.offset,\n          dataStartIndex = _state6.dataStartIndex,\n          dataEndIndex = _state6.dataEndIndex,\n          updateId = _state6.updateId;\n        var brushItem = findChildByType(children, Brush);\n        if (!brushItem) {\n          return null;\n        }\n\n        // TODO: update brush when children update\n        return React.cloneElement(brushItem, {\n          onChange: combineEventHandlers(this.handleBrushChange, null, brushItem.props.onChange),\n          data: data,\n          x: offset.left,\n          y: offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),\n          width: offset.width,\n          startIndex: dataStartIndex,\n          endIndex: dataEndIndex,\n          updateId: 'brush-' + updateId\n        });\n      }\n    }, {\n      key: 'renderReferenceElements',\n      value: function renderReferenceElements(isFront, Compt) {\n        var children = this.props.children;\n        var elements = findAllByType(children, Compt);\n        if (!elements || !elements.length) {\n          return null;\n        }\n        var _state7 = this.state,\n          xAxisMap = _state7.xAxisMap,\n          yAxisMap = _state7.yAxisMap,\n          offset = _state7.offset;\n        var keyPrefix = getDisplayName(Compt) + '-' + (isFront ? 'front' : 'back');\n        return elements.filter(function (entry) {\n          return isFront === entry.props.isFront;\n        }).map(function (entry, i) {\n          var _entry$props = entry.props,\n            xAxisId = _entry$props.xAxisId,\n            yAxisId = _entry$props.yAxisId;\n          return React.cloneElement(entry, {\n            key: keyPrefix + '-' + i,\n            xAxis: xAxisMap[xAxisId],\n            yAxis: yAxisMap[yAxisId],\n            viewBox: {\n              x: offset.left,\n              y: offset.top,\n              width: offset.width,\n              height: offset.height\n            }\n          });\n        });\n      }\n    }, {\n      key: 'renderChart',\n      value: function renderChart() {\n        var _props7 = this.props,\n          children = _props7.children,\n          width = _props7.width,\n          height = _props7.height,\n          others = _objectWithoutProperties(_props7, ['children', 'width', 'height']);\n        var _state8 = this.state,\n          xAxisMap = _state8.xAxisMap,\n          yAxisMap = _state8.yAxisMap;\n        var attrs = getPresentationAttributes(others);\n        return React.createElement(Surface, _extends({}, attrs, {\n          width: width,\n          height: height\n        }), this.renderGrid(), this.renderReferenceElements(false, ReferenceArea), this.renderReferenceElements(false, ReferenceLine), this.renderReferenceElements(false, ReferenceDot), this.renderAxes(xAxisMap, 'x-axis'), this.renderAxes(yAxisMap, 'y-axis'), React.createElement(ChartComponent, _extends({}, this.props, this.state)), this.renderReferenceElements(true, ReferenceArea), this.renderReferenceElements(true, ReferenceLine), this.renderReferenceElements(true, ReferenceDot), this.renderBrush(), filterSvgElements(children));\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n        var data = this.props.data;\n        if (!validateWidthHeight(this) || !data || !data.length) {\n          return null;\n        }\n        var _props8 = this.props,\n          className = _props8.className,\n          width = _props8.width,\n          height = _props8.height,\n          style = _props8.style,\n          compact = _props8.compact;\n        var events = {\n          onMouseEnter: this.handleMouseEnter,\n          onMouseMove: this.handleMouseMove,\n          onMouseLeave: this.handleMouseLeave,\n          onClick: this.handleClick,\n          onMouseDown: this.handleMouseDown,\n          onMouseUp: this.handleMouseUp,\n          onTouchMove: this.handleTouchMove\n        };\n\n        // The \"compact\" mode is mainly used as the panorama within Brush\n        if (compact) {\n          return this.renderChart();\n        }\n        return React.createElement('div', _extends({\n          className: classNames('recharts-wrapper', className),\n          style: _extends({}, style, {\n            position: 'relative',\n            cursor: 'default',\n            width: width,\n            height: height\n          })\n        }, events, {\n          ref: function ref(node) {\n            _this3.container = node;\n          }\n        }), this.renderChart(), this.renderLegend(), this.renderTooltip());\n      }\n    }]);\n    return CategoricalChartWrapper;\n  }(Component), _class.displayName = getDisplayName(ChartComponent), _class.propTypes = _extends({}, ChartComponent.propTypes, {\n    syncId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    compact: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    data: PropTypes.arrayOf(PropTypes.object),\n    layout: PropTypes.oneOf(['horizontal', 'vertical']),\n    stackOffset: PropTypes.oneOf(['sign', 'expand', 'none', 'wiggle', 'silhouette']),\n    throttleDelay: PropTypes.number,\n    margin: PropTypes.shape({\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number\n    }),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    onClick: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func\n  }), _class.defaultProps = {\n    layout: 'horizontal',\n    stackOffset: 'none',\n    margin: {\n      top: 5,\n      right: 5,\n      bottom: 5,\n      left: 5\n    }\n  }, _temp);\n  return CategoricalChartWrapper;\n};\nexport default generateCategoricalChart;","map":{"version":3,"names":["_sortBy","_isFunction","_range","_isNil","_throttle","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_objectWithoutProperties","obj","keys","indexOf","_defineProperty","value","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","React","Component","PropTypes","classNames","Surface","Layer","Tooltip","Legend","warn","findAllByType","findChildByType","filterSvgElements","getDisplayName","getPresentationAttributes","validateWidthHeight","isChildrenEqual","CartesianAxis","CartesianGrid","ReferenceLine","ReferenceDot","ReferenceArea","XAxis","YAxis","Brush","getOffset","calculateChartCoordinate","parseSpecifiedDomain","getAnyElementOfObject","hasDuplicate","checkDomainOfScale","combineEventHandlers","parseScale","getValueByDataKey","uniqueId","calculateActiveTickIndex","detectReferenceElementsDomain","getMainColorOfGraphicItem","getDomainOfStackGroups","getDomainOfDataByKey","getLegendProps","getDomainOfItemsWithSameAxis","getCoordinatesOfGrid","getStackGroupsByAxisId","getTicksOfAxis","isCategorialAxis","getTicksOfScale","appendOffsetOfLegend","shallowEqual","eventCenter","SYNC_EVENT","ORIENT_MAP","xAxis","yAxis","originCoordinate","x","y","generateCategoricalChart","ChartComponent","GraphicalChild","_class","_temp","CategoricalChartWrapper","_Component","_this","getPrototypeOf","handleLegendBBoxUpdate","box","legendInstance","_this$state","state","dataStartIndex","dataEndIndex","setState","updateStateOfAxisMapsOffsetAndStackGroups","handleReceiveSyncEvent","cId","chartId","data","_this$props","syncId","layout","uniqueChartId","activeTooltipIndex","chartX","chartY","_this$state2","offset","tooltipTicks","viewBox","left","top","validateChartX","Math","min","width","validateChartY","height","activeLabel","activePayload","getTooltipContent","activeCoordinate","coordinate","handleBrushChange","_ref","startIndex","endIndex","triggerSyncEvent","handleMouseEnter","e","onMouseEnter","mouse","getMouseInfo","nextState","isTooltipActive","triggeredAfterMouseMove","onMouseMove","handleMouseMove","persist","handleMouseLeave","onMouseLeave","handleClick","onClick","handleMouseDown","onMouseDown","handleMouseUp","onMouseUp","handleTouchMove","changedTouches","verticalCoordinatesGenerator","_ref2","getTicks","defaultProps","ticks","horizontalCoordinatesGenerator","_ref3","axesTicksGenerator","axis","tooltipTicksGenerator","_ref4","xAxisMap","yAxisMap","axisMap","orderedTooltipTicks","o","tooltipAxis","defaultState","createDefaultState","updateId","validateAxes","throttleDelay","componentDidMount","addListener","componentWillReceiveProps","nextProps","_props","children","stackOffset","margin","_state","_defaultState","removeListener","componentWillUnmount","cancel","getAxisMap","_ref5","_ref5$axisType","axisType","undefined","graphicalItems","stackGroups","Axis","axisIdKey","axes","getAxisMapByAxes","getAxisMapByItems","_ref6","displayedData","slice","len","isCategorial","reduce","result","child","_child$props","type","dataKey","allowDataOverflow","scale","axisId","domain","duplicateDomain","categoricalDomain","duplicate","filter","entry","hasStack","originalDomain","_ref7","index","hide","orientation","getFormatAxisMap","displayName","ids","steps","leftMirror","right","rightMirror","topMirror","bottom","bottomMirror","id","_axis$padding","padding","mirror","reversed","offsetKey","range","needSpace","finalAxis","event","container","containerOffset","isIn","_state2","pos","activeIndex","_state3","map","_child$props2","name","unit","formatter","color","payload","_ref8","numericIdName","cateIdName","calculateOffset","ticksObj","on","setMaxListeners","_maxListeners","brushItem","legendItem","offsetH","offsetV","brushBottom","legendBox","getBBox","_props2","xAxes","yAxes","forEach","emit","renderAxes","_props3","push","createElement","ticksGenerator","className","renderGrid","_state4","_props4","gridItem","cloneElement","chartWidth","chartHeight","renderLegend","_this2","_props5","legendWidth","legendHeight","ref","legend","onBBoxUpdate","renderTooltip","tooltipItem","_state5","active","label","renderBrush","_props6","_state6","onChange","renderReferenceElements","isFront","Compt","elements","_state7","keyPrefix","_entry$props","xAxisId","yAxisId","renderChart","_props7","others","_state8","attrs","render","_this3","_props8","style","compact","events","onTouchMove","position","cursor","node","propTypes","oneOfType","string","number","bool","arrayOf","object","oneOf","shape","func"],"sources":["/home/alam/Desktop/ReactProject/leaderboard/node_modules/recharts/es6/chart/generateCategoricalChart.js"],"sourcesContent":["import _sortBy from 'lodash/sortBy';\nimport _isFunction from 'lodash/isFunction';\nimport _range from 'lodash/range';\nimport _isNil from 'lodash/isNil';\nimport _throttle from 'lodash/throttle';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Surface from '../container/Surface';\nimport Layer from '../container/Layer';\nimport Tooltip from '../component/Tooltip';\nimport Legend from '../component/Legend';\n\nimport { warn } from '../util/LogUtils';\nimport { findAllByType, findChildByType, filterSvgElements, getDisplayName, getPresentationAttributes, validateWidthHeight, isChildrenEqual } from '../util/ReactUtils';\n\nimport CartesianAxis from '../cartesian/CartesianAxis';\nimport CartesianGrid from '../cartesian/CartesianGrid';\nimport ReferenceLine from '../cartesian/ReferenceLine';\nimport ReferenceDot from '../cartesian/ReferenceDot';\nimport ReferenceArea from '../cartesian/ReferenceArea';\nimport XAxis from '../cartesian/XAxis';\nimport YAxis from '../cartesian/YAxis';\nimport Brush from '../cartesian/Brush';\nimport { getOffset, calculateChartCoordinate } from '../util/DOMUtils';\nimport { parseSpecifiedDomain, getAnyElementOfObject, hasDuplicate, checkDomainOfScale, combineEventHandlers, parseScale, getValueByDataKey, uniqueId } from '../util/DataUtils';\nimport { calculateActiveTickIndex, detectReferenceElementsDomain, getMainColorOfGraphicItem, getDomainOfStackGroups, getDomainOfDataByKey, getLegendProps, getDomainOfItemsWithSameAxis, getCoordinatesOfGrid, getStackGroupsByAxisId, getTicksOfAxis, isCategorialAxis, getTicksOfScale, appendOffsetOfLegend } from '../util/CartesianUtils';\nimport { shallowEqual } from '../util/PureRender';\nimport { eventCenter, SYNC_EVENT } from '../util/Events';\n\nvar ORIENT_MAP = {\n  xAxis: ['bottom', 'top'],\n  yAxis: ['left', 'right']\n};\n\nvar originCoordinate = { x: 0, y: 0 };\n\nvar generateCategoricalChart = function generateCategoricalChart(ChartComponent, GraphicalChild) {\n  var _class, _temp;\n\n  var CategoricalChartWrapper = (_temp = _class = function (_Component) {\n    _inherits(CategoricalChartWrapper, _Component);\n\n    function CategoricalChartWrapper(props) {\n      _classCallCheck(this, CategoricalChartWrapper);\n\n      var _this = _possibleConstructorReturn(this, (CategoricalChartWrapper.__proto__ || Object.getPrototypeOf(CategoricalChartWrapper)).call(this, props));\n\n      _this.handleLegendBBoxUpdate = function (box) {\n        if (box && _this.legendInstance) {\n          var _this$state = _this.state,\n              dataStartIndex = _this$state.dataStartIndex,\n              dataEndIndex = _this$state.dataEndIndex;\n\n\n          _this.setState(_this.updateStateOfAxisMapsOffsetAndStackGroups({\n            props: _this.props, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex\n          }));\n        }\n      };\n\n      _this.handleReceiveSyncEvent = function (cId, chartId, data) {\n        var _this$props = _this.props,\n            syncId = _this$props.syncId,\n            layout = _this$props.layout;\n\n\n        if (syncId === cId && chartId !== _this.uniqueChartId) {\n          var dataStartIndex = data.dataStartIndex,\n              dataEndIndex = data.dataEndIndex;\n\n\n          if (!_isNil(data.dataStartIndex) || !_isNil(data.dataEndIndex)) {\n            _this.setState(_extends({\n              dataStartIndex: dataStartIndex,\n              dataEndIndex: dataEndIndex\n            }, _this.updateStateOfAxisMapsOffsetAndStackGroups({ props: _this.props, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex })));\n          } else if (!_isNil(data.activeTooltipIndex)) {\n            var chartX = data.chartX,\n                chartY = data.chartY,\n                activeTooltipIndex = data.activeTooltipIndex;\n            var _this$state2 = _this.state,\n                offset = _this$state2.offset,\n                tooltipTicks = _this$state2.tooltipTicks;\n\n            if (!offset) {\n              return;\n            }\n            var viewBox = _extends({}, offset, { x: offset.left, y: offset.top });\n            // When a categotical chart is combined with another chart, the value of chartX\n            // and chartY may beyond the boundaries.\n            var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);\n            var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);\n            var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;\n            var activePayload = _this.getTooltipContent(activeTooltipIndex);\n            var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {\n              x: layout === 'horizontal' ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,\n              y: layout === 'horizontal' ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate\n            } : originCoordinate;\n\n            _this.setState(_extends({}, data, { activeLabel: activeLabel, activeCoordinate: activeCoordinate, activePayload: activePayload }));\n          } else {\n            _this.setState(data);\n          }\n        }\n      };\n\n      _this.handleBrushChange = function (_ref) {\n        var startIndex = _ref.startIndex,\n            endIndex = _ref.endIndex;\n\n        // Only trigger changes if the extents of the brush have actually changed\n        if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {\n          _this.setState(_extends({\n            dataStartIndex: startIndex,\n            dataEndIndex: endIndex\n          }, _this.updateStateOfAxisMapsOffsetAndStackGroups({ props: _this.props, dataStartIndex: startIndex, dataEndIndex: endIndex })));\n\n          _this.triggerSyncEvent({\n            dataStartIndex: startIndex,\n            dataEndIndex: endIndex\n          });\n        }\n      };\n\n      _this.handleMouseEnter = function (e) {\n        var onMouseEnter = _this.props.onMouseEnter;\n\n        var mouse = _this.getMouseInfo(e);\n\n        if (mouse) {\n          var nextState = _extends({}, mouse, { isTooltipActive: true });\n          _this.setState(nextState);\n          _this.triggerSyncEvent(nextState);\n\n          if (_isFunction(onMouseEnter)) {\n            onMouseEnter(nextState, e);\n          }\n        }\n      };\n\n      _this.triggeredAfterMouseMove = function (e) {\n        var onMouseMove = _this.props.onMouseMove;\n\n        var mouse = _this.getMouseInfo(e);\n        var nextState = mouse ? _extends({}, mouse, { isTooltipActive: true }) : { isTooltipActive: false };\n\n        _this.setState(nextState);\n        _this.triggerSyncEvent(nextState);\n\n        if (_isFunction(onMouseMove)) {\n          onMouseMove(nextState, e);\n        }\n      };\n\n      _this.handleMouseMove = function (e) {\n        if (e && _isFunction(e.persist)) {\n          e.persist();\n          _this.triggeredAfterMouseMove(e);\n        }\n      };\n\n      _this.handleMouseLeave = function (e) {\n        var onMouseLeave = _this.props.onMouseLeave;\n\n        var nextState = { isTooltipActive: false };\n\n        _this.setState(nextState);\n        _this.triggerSyncEvent(nextState);\n\n        if (_isFunction(onMouseLeave)) {\n          onMouseLeave(nextState, e);\n        }\n      };\n\n      _this.handleClick = function (e) {\n        var onClick = _this.props.onClick;\n\n\n        if (_isFunction(onClick)) {\n          var mouse = _this.getMouseInfo(e);\n\n          onClick(mouse, e);\n        }\n      };\n\n      _this.handleMouseDown = function (e) {\n        var onMouseDown = _this.props.onMouseDown;\n\n\n        if (_isFunction(onMouseDown)) {\n          var mouse = _this.getMouseInfo(e);\n\n          onMouseDown(mouse, e);\n        }\n      };\n\n      _this.handleMouseUp = function (e) {\n        var onMouseUp = _this.props.onMouseUp;\n\n\n        if (_isFunction(onMouseUp)) {\n          var mouse = _this.getMouseInfo(e);\n\n          onMouseUp(mouse, e);\n        }\n      };\n\n      _this.handleTouchMove = function (e) {\n        if (e.changedTouches != null && e.changedTouches.length > 0) {\n          _this.handleMouseMove(e.changedTouches[0]);\n        }\n      };\n\n      _this.verticalCoordinatesGenerator = function (_ref2) {\n        var xAxis = _ref2.xAxis,\n            width = _ref2.width,\n            height = _ref2.height,\n            offset = _ref2.offset;\n        return getCoordinatesOfGrid(CartesianAxis.getTicks(_extends({}, CartesianAxis.defaultProps, xAxis, {\n          ticks: getTicksOfAxis(xAxis, true),\n          viewBox: { x: 0, y: 0, width: width, height: height }\n        })), offset.left, offset.left + offset.width);\n      };\n\n      _this.horizontalCoordinatesGenerator = function (_ref3) {\n        var yAxis = _ref3.yAxis,\n            width = _ref3.width,\n            height = _ref3.height,\n            offset = _ref3.offset;\n        return getCoordinatesOfGrid(CartesianAxis.getTicks(_extends({}, CartesianAxis.defaultProps, yAxis, {\n          ticks: getTicksOfAxis(yAxis, true),\n          viewBox: { x: 0, y: 0, width: width, height: height }\n        })), offset.top, offset.top + offset.height);\n      };\n\n      _this.axesTicksGenerator = function (axis) {\n        return getTicksOfAxis(axis, true);\n      };\n\n      _this.tooltipTicksGenerator = function (_ref4) {\n        var layout = _ref4.layout,\n            xAxisMap = _ref4.xAxisMap,\n            yAxisMap = _ref4.yAxisMap;\n\n        var axisMap = layout === 'horizontal' ? xAxisMap : yAxisMap;\n        var axis = getAnyElementOfObject(axisMap);\n        var tooltipTicks = getTicksOfAxis(axis, false, true);\n\n        return {\n          tooltipTicks: tooltipTicks,\n          orderedTooltipTicks: _sortBy(tooltipTicks, function (o) {\n            return o.coordinate;\n          }),\n          tooltipAxis: axis\n        };\n      };\n\n      var defaultState = _this.createDefaultState(props);\n      _this.state = _extends({}, defaultState, { updateId: 0\n      }, _this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({ props: props }, defaultState)));\n      _this.validateAxes();\n      _this.uniqueChartId = uniqueId('recharts');\n\n      if (props.throttleDelay) {\n        _this.triggeredAfterMouseMove = _throttle(_this.triggeredAfterMouseMove, props.throttleDelay);\n      }\n      return _this;\n    }\n\n    /* eslint-disable  react/no-did-mount-set-state */\n\n\n    _createClass(CategoricalChartWrapper, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (!_isNil(this.props.syncId)) {\n          this.addListener();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        var _props = this.props,\n            data = _props.data,\n            children = _props.children,\n            width = _props.width,\n            height = _props.height,\n            layout = _props.layout,\n            stackOffset = _props.stackOffset,\n            margin = _props.margin;\n\n\n        if (nextProps.data !== data || nextProps.width !== width || nextProps.height !== height || nextProps.layout !== layout || nextProps.stackOffset !== stackOffset || !shallowEqual(nextProps.margin, margin)) {\n          var defaultState = this.createDefaultState(nextProps);\n          this.setState(_extends({}, defaultState, { updateId: this.state.updateId + 1\n          }, this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({ props: nextProps }, defaultState))));\n        } else if (!isChildrenEqual(nextProps.children, children)) {\n          var _state = this.state,\n              dataStartIndex = _state.dataStartIndex,\n              dataEndIndex = _state.dataEndIndex;\n          // Don't update brush\n\n          var _defaultState = _extends({}, this.createDefaultState(nextProps), { dataEndIndex: dataEndIndex, dataStartIndex: dataStartIndex\n          });\n          this.setState(_extends({}, _defaultState, this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({ props: nextProps }, _defaultState))));\n        }\n        // add syncId\n        if (_isNil(this.props.syncId) && !_isNil(nextProps.syncId)) {\n          this.addListener();\n        }\n        // remove syncId\n        if (!_isNil(this.props.syncId) && _isNil(nextProps.syncId)) {\n          this.removeListener();\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (!_isNil(this.props.syncId)) {\n          this.removeListener();\n        }\n        if (typeof this.triggeredAfterMouseMove.cancel === 'function') {\n          this.triggeredAfterMouseMove.cancel();\n        }\n      }\n      /**\n      * Get the configuration of all x-axis or y-axis\n      * @param  {Object} props          Latest props\n      * @param  {String} axisType       The type of axis\n      * @param  {Array}  graphicalItems The instances of item\n      * @param  {Object} stackGroups    The items grouped by axisId and stackId\n      * @param {Number} dataStartIndex  The start index of the data series when a brush is applied\n      * @param {Number} dataEndIndex    The end index of the data series when a brush is applied\n      * @return {Object}          Configuration\n      */\n\n    }, {\n      key: 'getAxisMap',\n      value: function getAxisMap(props, _ref5) {\n        var _ref5$axisType = _ref5.axisType,\n            axisType = _ref5$axisType === undefined ? 'xAxis' : _ref5$axisType,\n            graphicalItems = _ref5.graphicalItems,\n            stackGroups = _ref5.stackGroups,\n            dataStartIndex = _ref5.dataStartIndex,\n            dataEndIndex = _ref5.dataEndIndex;\n        var children = props.children;\n\n        var Axis = axisType === 'xAxis' ? XAxis : YAxis;\n        var axisIdKey = axisType === 'xAxis' ? 'xAxisId' : 'yAxisId';\n        // Get all the instance of Axis\n        var axes = findAllByType(children, Axis);\n\n        var axisMap = {};\n\n        if (axes && axes.length) {\n          axisMap = this.getAxisMapByAxes(props, { axes: axes, graphicalItems: graphicalItems, axisType: axisType, axisIdKey: axisIdKey,\n            stackGroups: stackGroups, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex });\n        } else if (graphicalItems && graphicalItems.length) {\n          axisMap = this.getAxisMapByItems(props, { graphicalItems: graphicalItems, Axis: Axis, axisType: axisType, axisIdKey: axisIdKey,\n            stackGroups: stackGroups, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex });\n        }\n\n        return axisMap;\n      }\n\n      /**\n       * Get the configuration of axis by the options of axis instance\n       * @param  {Object} props         Latest props\n       * @param {Array}  axes           The instance of axes\n       * @param  {Array} graphicalItems The instances of item\n       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n       * @param  {String} axisIdKey     The unique id of an axis\n       * @param  {Object} stackGroups   The items grouped by axisId and stackId\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n       * @return {Object}      Configuration\n       */\n\n    }, {\n      key: 'getAxisMapByAxes',\n      value: function getAxisMapByAxes(props, _ref6) {\n        var axes = _ref6.axes,\n            graphicalItems = _ref6.graphicalItems,\n            axisType = _ref6.axisType,\n            axisIdKey = _ref6.axisIdKey,\n            stackGroups = _ref6.stackGroups,\n            dataStartIndex = _ref6.dataStartIndex,\n            dataEndIndex = _ref6.dataEndIndex;\n        var layout = props.layout,\n            children = props.children,\n            data = props.data,\n            stackOffset = props.stackOffset;\n\n        var displayedData = data.slice(dataStartIndex, dataEndIndex + 1);\n        var len = displayedData.length;\n        var isCategorial = isCategorialAxis(layout, axisType);\n\n        // Eliminate duplicated axes\n        var axisMap = axes.reduce(function (result, child) {\n          var _child$props = child.props,\n              type = _child$props.type,\n              dataKey = _child$props.dataKey,\n              allowDataOverflow = _child$props.allowDataOverflow,\n              scale = _child$props.scale;\n\n          var axisId = child.props[axisIdKey];\n\n          if (!result[axisId]) {\n            var domain = void 0,\n                duplicateDomain = void 0,\n                categoricalDomain = void 0;\n\n            if (dataKey) {\n              domain = getDomainOfDataByKey(displayedData, dataKey, type);\n\n              if (type === 'category' && isCategorial) {\n                var duplicate = hasDuplicate(domain);\n                duplicateDomain = duplicate ? domain : null;\n\n                // When category axis has duplicated text, serial numbers are used to generate scale\n                domain = duplicate ? _range(0, len) : domain;\n              } else if (type === 'category') {\n                // eliminate undefined or null or empty string\n                domain = domain.filter(function (entry) {\n                  return entry !== '' && !_isNil(entry);\n                });\n              }\n\n              if (isCategorial && (type === 'number' || scale !== 'auto')) {\n                categoricalDomain = getDomainOfDataByKey(displayedData, dataKey, 'category');\n              }\n            } else if (isCategorial) {\n              domain = _range(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === 'number') {\n              // when stackOffset is 'expand', the domain may be calculated as [0, 1.000000000002]\n              domain = stackOffset === 'expand' ? [0, 1] : getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n            } else {\n              domain = getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function (entry) {\n                return entry.props[axisIdKey] === axisId;\n              }), type, true);\n            }\n            if (type === 'number') {\n              // To detect wether there is any reference lines whose props alwaysShow is true\n              domain = detectReferenceElementsDomain(children, domain, axisId, axisType);\n\n              if (child.props.domain) {\n                domain = parseSpecifiedDomain(child.props.domain, domain, allowDataOverflow);\n              }\n            }\n\n            return _extends({}, result, _defineProperty({}, axisId, _extends({}, child.props, {\n              axisType: axisType,\n              domain: domain,\n              categoricalDomain: categoricalDomain,\n              duplicateDomain: duplicateDomain,\n              originalDomain: child.props.domain,\n              isCategorial: isCategorial\n            })));\n          }\n\n          return result;\n        }, {});\n        return axisMap;\n      }\n\n      /**\n       * Get the configuration of axis by the options of item,\n       * this kind of axis does not display in chart\n       * @param  {Object} props         Latest props\n       * @param  {Array} graphicalItems The instances of item\n       * @param  {ReactElement} Axis    Axis Component\n       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n       * @param  {String} axisIdKey     The unique id of an axis\n       * @param  {Object} stackGroups   The items grouped by axisId and stackId\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n       * @return {Object}               Configuration\n       */\n\n    }, {\n      key: 'getAxisMapByItems',\n      value: function getAxisMapByItems(props, _ref7) {\n        var graphicalItems = _ref7.graphicalItems,\n            Axis = _ref7.Axis,\n            axisType = _ref7.axisType,\n            axisIdKey = _ref7.axisIdKey,\n            stackGroups = _ref7.stackGroups,\n            dataStartIndex = _ref7.dataStartIndex,\n            dataEndIndex = _ref7.dataEndIndex;\n        var layout = props.layout,\n            children = props.children,\n            data = props.data;\n\n        var displayedData = data.slice(dataStartIndex, dataEndIndex + 1);\n        var len = displayedData.length;\n        var isCategorial = isCategorialAxis(layout, axisType);\n        var index = -1;\n\n        // The default type of x-axis is category axis,\n        // The default contents of x-axis is the serial numbers of data\n        // The default type of y-axis is number axis\n        // The default contents of y-axis is the domain of data\n        var axisMap = graphicalItems.reduce(function (result, child) {\n          var axisId = child.props[axisIdKey];\n\n          if (!result[axisId]) {\n            index++;\n            var domain = void 0;\n\n            if (isCategorial) {\n              domain = _range(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {\n              domain = getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n              domain = detectReferenceElementsDomain(children, domain, axisId, axisType);\n            } else {\n              domain = parseSpecifiedDomain(Axis.defaultProps.domain, getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function (entry) {\n                return entry.props[axisIdKey] === axisId;\n              }), 'number'), Axis.defaultProps.allowDataOverflow);\n              domain = detectReferenceElementsDomain(children, domain, axisId, axisType);\n            }\n\n            return _extends({}, result, _defineProperty({}, axisId, _extends({\n              axisType: axisType\n            }, Axis.defaultProps, {\n              hide: true,\n              orientation: ORIENT_MAP[axisType][index % 2],\n              domain: domain,\n              originalDomain: Axis.defaultProps.domain,\n              isCategorial: isCategorial\n            })));\n          }\n\n          return result;\n        }, {});\n\n        return axisMap;\n      }\n      /**\n       * Calculate the scale function, position, width, height of axes\n       * @param  {Object} props    Latest props\n       * @param  {Object} axisMap  The configuration of axes\n       * @param  {Object} offset   The offset of main part in the svg element\n       * @param  {Object} axisType The type of axes, x-axis or y-axis\n       * @return {Object} Configuration\n       */\n\n    }, {\n      key: 'getFormatAxisMap',\n      value: function getFormatAxisMap(props, axisMap, offset, axisType) {\n        var width = props.width,\n            height = props.height,\n            layout = props.layout;\n\n        var displayName = this.constructor.displayName;\n        var ids = Object.keys(axisMap);\n        var steps = {\n          left: offset.left,\n          leftMirror: offset.left,\n          right: width - offset.right,\n          rightMirror: width - offset.right,\n          top: offset.top,\n          topMirror: offset.top,\n          bottom: height - offset.bottom,\n          bottomMirror: height - offset.bottom\n        };\n\n        return ids.reduce(function (result, id) {\n          var axis = axisMap[id];\n          var orientation = axis.orientation,\n              domain = axis.domain,\n              _axis$padding = axis.padding,\n              padding = _axis$padding === undefined ? {} : _axis$padding,\n              mirror = axis.mirror,\n              reversed = axis.reversed;\n\n          var offsetKey = '' + orientation + (mirror ? 'Mirror' : '');\n\n          var range = void 0,\n              x = void 0,\n              y = void 0,\n              needSpace = void 0;\n\n          if (axisType === 'xAxis') {\n            range = [offset.left + (padding.left || 0), offset.left + offset.width - (padding.right || 0)];\n          } else {\n            range = layout === 'horizontal' ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0), offset.top + offset.height - (padding.bottom || 0)];\n          }\n\n          if (reversed) {\n            range = [range[1], range[0]];\n          }\n\n          var scale = parseScale(axis, displayName);\n          scale.domain(domain).range(range);\n          checkDomainOfScale(scale);\n          var ticks = getTicksOfScale(scale, axis);\n\n          if (axisType === 'xAxis') {\n            needSpace = orientation === 'top' && !mirror || orientation === 'bottom' && mirror;\n            x = offset.left;\n            y = steps[offsetKey] - needSpace * axis.height;\n          } else {\n            needSpace = orientation === 'left' && !mirror || orientation === 'right' && mirror;\n            x = steps[offsetKey] - needSpace * axis.width;\n            y = offset.top;\n          }\n\n          var finalAxis = _extends({}, axis, ticks, {\n            range: range, x: x, y: y, scale: scale,\n            width: axisType === 'xAxis' ? offset.width : axis.width,\n            height: axisType === 'yAxis' ? offset.height : axis.height\n          });\n          if (!axis.hide && axisType === 'xAxis') {\n            steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;\n          } else if (!axis.hide) {\n            steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;\n          }\n\n          return _extends({}, result, _defineProperty({}, id, finalAxis));\n        }, {});\n      }\n      /**\n       * Get the information of mouse in chart, return null when the mouse is not in the chart\n       * @param  {Object} event    The event object\n       * @return {Object}          Mouse data\n       */\n\n    }, {\n      key: 'getMouseInfo',\n      value: function getMouseInfo(event) {\n        if (!this.container) {\n          return null;\n        }\n\n        var offset = this.state.offset;\n\n        var containerOffset = getOffset(this.container);\n        var e = calculateChartCoordinate(event, containerOffset);\n        var isIn = e.chartX >= offset.left && e.chartX <= offset.left + offset.width && e.chartY >= offset.top && e.chartY <= offset.top + offset.height;\n\n        if (!isIn) {\n          return null;\n        }\n\n        var layout = this.props.layout;\n        var _state2 = this.state,\n            ticks = _state2.orderedTooltipTicks,\n            axis = _state2.tooltipAxis,\n            tooltipTicks = _state2.tooltipTicks;\n\n        var pos = layout === 'horizontal' ? e.chartX : e.chartY;\n        var activeIndex = calculateActiveTickIndex(pos, ticks, axis);\n\n        if (activeIndex >= 0) {\n          var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;\n          var activePayload = this.getTooltipContent(activeIndex);\n          var activeCoordinate = tooltipTicks[activeIndex] ? {\n            x: layout === 'horizontal' ? tooltipTicks[activeIndex].coordinate : e.chartX,\n            y: layout === 'horizontal' ? e.chartY : tooltipTicks[activeIndex].coordinate\n          } : originCoordinate;\n\n          return _extends({}, e, {\n            activeTooltipIndex: activeIndex,\n            activeLabel: activeLabel,\n            activePayload: activePayload,\n            activeCoordinate: activeCoordinate\n          });\n        }\n\n        return null;\n      }\n      /**\n       * Get the content to be displayed in the tooltip\n       * @param  {Number} activeIndex    Active index of data\n       * @return {Array}                 The content of tooltip\n       */\n\n    }, {\n      key: 'getTooltipContent',\n      value: function getTooltipContent(activeIndex) {\n        var _state3 = this.state,\n            dataStartIndex = _state3.dataStartIndex,\n            dataEndIndex = _state3.dataEndIndex,\n            graphicalItems = _state3.graphicalItems;\n\n        var data = this.props.data.slice(dataStartIndex, dataEndIndex + 1);\n\n        if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= data.length) {\n          return null;\n        }\n\n        return graphicalItems.map(function (child) {\n          var _child$props2 = child.props,\n              dataKey = _child$props2.dataKey,\n              name = _child$props2.name,\n              unit = _child$props2.unit,\n              formatter = _child$props2.formatter;\n\n\n          return _extends({}, getPresentationAttributes(child), {\n            dataKey: dataKey, unit: unit, formatter: formatter,\n            name: name || dataKey,\n            color: getMainColorOfGraphicItem(child),\n            value: getValueByDataKey(data[activeIndex], dataKey),\n            payload: data[activeIndex]\n          });\n        });\n      }\n\n      /**\n       * The AxisMaps are expensive to render on large data sets\n       * so provide the ability to store them in state and only update them when necessary\n       * they are dependent upon the start and end index of\n       * the brush so it's important that this method is called _after_\n       * the state is updated with any new start/end indices\n       *\n       * @param {Object} props The props object to be used for updating the axismaps\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex The end index of the data series when a brush is applied\n       * @return {Object} state New state to set\n       */\n\n    }, {\n      key: 'updateStateOfAxisMapsOffsetAndStackGroups',\n      value: function updateStateOfAxisMapsOffsetAndStackGroups(_ref8) {\n        var props = _ref8.props,\n            dataStartIndex = _ref8.dataStartIndex,\n            dataEndIndex = _ref8.dataEndIndex;\n        var data = props.data;\n\n        if (!validateWidthHeight({ props: props }) || !data || !data.length) {\n          return null;\n        }\n\n        var children = props.children,\n            layout = props.layout,\n            stackOffset = props.stackOffset;\n\n        var numericIdName = layout === 'horizontal' ? 'yAxis' : 'xAxis';\n        var cateIdName = layout === 'horizontal' ? 'xAxis' : 'yAxis';\n        var graphicalItems = findAllByType(children, GraphicalChild);\n        var stackGroups = getStackGroupsByAxisId(data, graphicalItems, numericIdName + 'Id', cateIdName + 'Id', stackOffset);\n\n        var xAxisMap = this.getAxisMap(props, {\n          axisType: 'xAxis',\n          graphicalItems: graphicalItems,\n          stackGroups: numericIdName === 'xAxis' && stackGroups,\n          dataStartIndex: dataStartIndex,\n          dataEndIndex: dataEndIndex\n        });\n\n        var yAxisMap = this.getAxisMap(props, {\n          axisType: 'yAxis',\n          graphicalItems: graphicalItems,\n          stackGroups: numericIdName === 'yAxis' && stackGroups,\n          dataStartIndex: dataStartIndex,\n          dataEndIndex: dataEndIndex\n        });\n\n        var offset = this.calculateOffset(props, graphicalItems, xAxisMap, yAxisMap);\n\n        xAxisMap = this.getFormatAxisMap(props, xAxisMap, offset, 'xAxis');\n        yAxisMap = this.getFormatAxisMap(props, yAxisMap, offset, 'yAxis');\n\n        var ticksObj = this.tooltipTicksGenerator({\n          layout: layout, xAxisMap: xAxisMap, yAxisMap: yAxisMap\n        });\n\n        return _extends({ graphicalItems: graphicalItems, xAxisMap: xAxisMap, yAxisMap: yAxisMap, offset: offset, stackGroups: stackGroups }, ticksObj);\n      }\n\n      /* eslint-disable  no-underscore-dangle */\n\n    }, {\n      key: 'addListener',\n      value: function addListener() {\n        eventCenter.on(SYNC_EVENT, this.handleReceiveSyncEvent);\n\n        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {\n          eventCenter.setMaxListeners(eventCenter._maxListeners + 1);\n        }\n      }\n    }, {\n      key: 'removeListener',\n      value: function removeListener() {\n        eventCenter.removeListener(SYNC_EVENT, this.handleReceiveSyncEvent);\n\n        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {\n          eventCenter.setMaxListeners(eventCenter._maxListeners - 1);\n        }\n      }\n      /**\n       * Returns default, reset state for the categorical chart.\n       * @param {Object} props Props object to use when creating the default state\n       * @return {Object} Whole new state\n       */\n\n    }, {\n      key: 'createDefaultState',\n      value: function createDefaultState(props) {\n        var children = props.children;\n\n        var brushItem = findChildByType(children, Brush);\n        var startIndex = brushItem && brushItem.props && brushItem.props.startIndex || 0;\n        var endIndex = brushItem && brushItem.props && brushItem.props.endIndex || props.data && props.data.length - 1 || 0;\n        return {\n          chartX: 0,\n          chartY: 0,\n          dataStartIndex: startIndex,\n          dataEndIndex: endIndex,\n          activeTooltipIndex: -1,\n          isTooltipActive: false\n        };\n      }\n      /**\n       * Calculate the offset of main part in the svg element\n       * @param  {Object} props          Latest props\n       * @param  {Array}  graphicalItems The instances of item\n       * @param  {Object} xAxisMap       The configuration of x-axis\n       * @param  {Object} yAxisMap       The configuration of y-axis\n       * @return {Object} The offset of main part in the svg element\n       */\n\n    }, {\n      key: 'calculateOffset',\n      value: function calculateOffset(props, graphicalItems, xAxisMap, yAxisMap) {\n        var width = props.width,\n            height = props.height,\n            children = props.children;\n\n        var margin = props.margin || {};\n        var brushItem = findChildByType(children, Brush);\n        var legendItem = findChildByType(children, Legend);\n\n        var offsetH = Object.keys(yAxisMap).reduce(function (result, id) {\n          var entry = yAxisMap[id];\n          var orientation = entry.orientation;\n\n          if (!entry.mirror && !entry.hide) {\n            return _extends({}, result, _defineProperty({}, orientation, result[orientation] + entry.width));\n          }\n\n          return result;\n        }, { left: margin.left || 0, right: margin.right || 0 });\n\n        var offsetV = Object.keys(xAxisMap).reduce(function (result, id) {\n          var entry = xAxisMap[id];\n          var orientation = entry.orientation;\n\n          if (!entry.mirror && !entry.hide) {\n            return _extends({}, result, _defineProperty({}, orientation, result[orientation] + entry.height));\n          }\n\n          return result;\n        }, { top: margin.top || 0, bottom: margin.bottom || 0 });\n\n        var offset = _extends({}, offsetV, offsetH);\n\n        var brushBottom = offset.bottom;\n\n        if (brushItem) {\n          offset.bottom += brushItem.props.height || Brush.defaultProps.height;\n        }\n\n        if (legendItem && this.legendInstance) {\n          var legendBox = this.legendInstance.getBBox();\n          offset = appendOffsetOfLegend(offset, graphicalItems, props, legendBox);\n        }\n\n        return _extends({\n          brushBottom: brushBottom\n        }, offset, {\n          width: width - offset.left - offset.right,\n          height: height - offset.top - offset.bottom\n        });\n      }\n      /**\n       * The handler of mouse entering chart\n       * @param  {Object} e              Event object\n       * @return {Null}                  null\n       */\n\n\n      /**\n       * The handler of mouse moving in chart\n       * @param  {Object} e        Event object\n       * @return {Null} no return\n       */\n\n      /**\n       * The handler if mouse leaving chart\n       * @param {Object} e Event object\n       * @return {Null} no return\n       */\n\n    }, {\n      key: 'validateAxes',\n      value: function validateAxes() {\n        var _props2 = this.props,\n            layout = _props2.layout,\n            children = _props2.children;\n\n        var xAxes = findAllByType(children, XAxis);\n        var yAxes = findAllByType(children, YAxis);\n\n        if (layout === 'horizontal' && xAxes && xAxes.length) {\n          xAxes.forEach(function (axis) {\n            warn(axis.props.type === 'category' || axis.props.type === 'number' && !_isNil(axis.props.dataKey), 'x-axis should be a category axis or a number axis which has specifed dataKey\\n             when the layout is horizontal');\n          });\n        } else if (layout === 'vertical') {\n          var displayName = this.constructor.displayName;\n\n          warn(yAxes && yAxes.length, 'You should add <YAxis type=\"number\" /> in ' + displayName + '.\\n           The layout is vertical now, y-axis should be category axis,\\n           but y-axis is number axis when no YAxis is added.');\n          warn(xAxes && xAxes.length, 'You should add <XAxis /> in ' + displayName + '.\\n          The layout is vertical now, x-axis is category when no XAxis is added.');\n\n          if (yAxes && yAxes.length) {\n            yAxes.forEach(function (axis) {\n              warn(axis.props.type === 'category' || axis.props.type === 'number' && !_isNil(axis.props.dataKey), 'y-axis should be a category axis or a number axis which has specifed dataKey\\n               when the layout is vertical');\n            });\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: 'triggerSyncEvent',\n      value: function triggerSyncEvent(data) {\n        var syncId = this.props.syncId;\n\n\n        if (!_isNil(syncId)) {\n          eventCenter.emit(SYNC_EVENT, syncId, this.uniqueChartId, data);\n        }\n      }\n    }, {\n      key: 'renderAxes',\n\n\n      /**\n       * Draw axes\n       * @param {Object} axisMap The configuration of all x-axes or y-axes\n       * @param {String} name    The name of axes\n       * @return {ReactElement}  The instance of x-axes\n       */\n      value: function renderAxes(axisMap, name) {\n        var _props3 = this.props,\n            width = _props3.width,\n            height = _props3.height;\n\n        var ids = axisMap && Object.keys(axisMap);\n\n        if (ids && ids.length) {\n          var axes = [];\n\n          for (var i = 0, len = ids.length; i < len; i++) {\n            var axis = axisMap[ids[i]];\n\n            if (!axis.hide) {\n\n              axes.push(React.createElement(CartesianAxis, _extends({}, axis, {\n                key: name + '-' + ids[i],\n                viewBox: { x: 0, y: 0, width: width, height: height },\n                ticksGenerator: this.axesTicksGenerator\n              })));\n            }\n          }\n\n          return axes.length ? React.createElement(\n            Layer,\n            { key: name + '-layer', className: 'recharts-' + name },\n            axes\n          ) : null;\n        }\n\n        return null;\n      }\n\n      /**\n       * Draw grid\n       * @return {ReactElement} The instance of grid\n       */\n\n    }, {\n      key: 'renderGrid',\n      value: function renderGrid() {\n        var _state4 = this.state,\n            xAxisMap = _state4.xAxisMap,\n            yAxisMap = _state4.yAxisMap,\n            offset = _state4.offset;\n        var _props4 = this.props,\n            children = _props4.children,\n            width = _props4.width,\n            height = _props4.height;\n\n        var gridItem = findChildByType(children, CartesianGrid);\n\n        if (!gridItem) {\n          return null;\n        }\n\n        var xAxis = getAnyElementOfObject(xAxisMap);\n        var yAxis = getAnyElementOfObject(yAxisMap);\n\n        return React.cloneElement(gridItem, {\n          key: 'grid',\n          x: offset.left,\n          y: offset.top,\n          width: offset.width,\n          height: offset.height,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          offset: offset,\n          chartWidth: width,\n          chartHeight: height,\n          verticalCoordinatesGenerator: this.verticalCoordinatesGenerator,\n          horizontalCoordinatesGenerator: this.horizontalCoordinatesGenerator\n        });\n      }\n      /**\n       * Draw legend\n       * @return {ReactElement}            The instance of Legend\n       */\n\n    }, {\n      key: 'renderLegend',\n      value: function renderLegend() {\n        var _this2 = this;\n\n        var graphicalItems = this.state.graphicalItems;\n        var _props5 = this.props,\n            children = _props5.children,\n            width = _props5.width,\n            height = _props5.height;\n\n        var margin = this.props.margin || {};\n        var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n        var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n        var props = getLegendProps(children, graphicalItems, legendWidth, legendHeight);\n\n        if (!props) {\n          return null;\n        }\n\n        return React.createElement(Legend, _extends({}, props, {\n          chartWidth: width,\n          chartHeight: height,\n          margin: margin,\n          ref: function ref(legend) {\n            _this2.legendInstance = legend;\n          },\n          onBBoxUpdate: this.handleLegendBBoxUpdate\n        }));\n      }\n\n      /**\n       * Draw Tooltip\n       * @return {ReactElement}  The instance of Tooltip\n       */\n\n    }, {\n      key: 'renderTooltip',\n      value: function renderTooltip() {\n        var children = this.props.children;\n\n        var tooltipItem = findChildByType(children, Tooltip);\n\n        if (!tooltipItem) {\n          return null;\n        }\n\n        var _state5 = this.state,\n            isTooltipActive = _state5.isTooltipActive,\n            activeCoordinate = _state5.activeCoordinate,\n            activePayload = _state5.activePayload,\n            activeLabel = _state5.activeLabel,\n            offset = _state5.offset;\n\n\n        return React.cloneElement(tooltipItem, {\n          viewBox: _extends({}, offset, { x: offset.left, y: offset.top }),\n          active: isTooltipActive,\n          label: activeLabel,\n          payload: isTooltipActive ? activePayload : [],\n          coordinate: activeCoordinate\n        });\n      }\n    }, {\n      key: 'renderBrush',\n      value: function renderBrush() {\n        var _props6 = this.props,\n            children = _props6.children,\n            margin = _props6.margin,\n            data = _props6.data;\n        var _state6 = this.state,\n            offset = _state6.offset,\n            dataStartIndex = _state6.dataStartIndex,\n            dataEndIndex = _state6.dataEndIndex,\n            updateId = _state6.updateId;\n\n        var brushItem = findChildByType(children, Brush);\n\n        if (!brushItem) {\n          return null;\n        }\n\n        // TODO: update brush when children update\n        return React.cloneElement(brushItem, {\n          onChange: combineEventHandlers(this.handleBrushChange, null, brushItem.props.onChange),\n          data: data,\n          x: offset.left,\n          y: offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),\n          width: offset.width,\n          startIndex: dataStartIndex,\n          endIndex: dataEndIndex,\n          updateId: 'brush-' + updateId\n        });\n      }\n    }, {\n      key: 'renderReferenceElements',\n      value: function renderReferenceElements(isFront, Compt) {\n        var children = this.props.children;\n\n        var elements = findAllByType(children, Compt);\n\n        if (!elements || !elements.length) {\n          return null;\n        }\n\n        var _state7 = this.state,\n            xAxisMap = _state7.xAxisMap,\n            yAxisMap = _state7.yAxisMap,\n            offset = _state7.offset;\n\n        var keyPrefix = getDisplayName(Compt) + '-' + (isFront ? 'front' : 'back');\n\n        return elements.filter(function (entry) {\n          return isFront === entry.props.isFront;\n        }).map(function (entry, i) {\n          var _entry$props = entry.props,\n              xAxisId = _entry$props.xAxisId,\n              yAxisId = _entry$props.yAxisId;\n\n\n          return React.cloneElement(entry, {\n            key: keyPrefix + '-' + i,\n            xAxis: xAxisMap[xAxisId],\n            yAxis: yAxisMap[yAxisId],\n            viewBox: {\n              x: offset.left,\n              y: offset.top,\n              width: offset.width,\n              height: offset.height\n            }\n          });\n        });\n      }\n    }, {\n      key: 'renderChart',\n      value: function renderChart() {\n        var _props7 = this.props,\n            children = _props7.children,\n            width = _props7.width,\n            height = _props7.height,\n            others = _objectWithoutProperties(_props7, ['children', 'width', 'height']);\n\n        var _state8 = this.state,\n            xAxisMap = _state8.xAxisMap,\n            yAxisMap = _state8.yAxisMap;\n\n        var attrs = getPresentationAttributes(others);\n\n        return React.createElement(\n          Surface,\n          _extends({}, attrs, { width: width, height: height }),\n          this.renderGrid(),\n          this.renderReferenceElements(false, ReferenceArea),\n          this.renderReferenceElements(false, ReferenceLine),\n          this.renderReferenceElements(false, ReferenceDot),\n          this.renderAxes(xAxisMap, 'x-axis'),\n          this.renderAxes(yAxisMap, 'y-axis'),\n          React.createElement(ChartComponent, _extends({}, this.props, this.state)),\n          this.renderReferenceElements(true, ReferenceArea),\n          this.renderReferenceElements(true, ReferenceLine),\n          this.renderReferenceElements(true, ReferenceDot),\n          this.renderBrush(),\n          filterSvgElements(children)\n        );\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        var data = this.props.data;\n\n        if (!validateWidthHeight(this) || !data || !data.length) {\n          return null;\n        }\n\n        var _props8 = this.props,\n            className = _props8.className,\n            width = _props8.width,\n            height = _props8.height,\n            style = _props8.style,\n            compact = _props8.compact;\n\n\n        var events = {\n          onMouseEnter: this.handleMouseEnter,\n          onMouseMove: this.handleMouseMove,\n          onMouseLeave: this.handleMouseLeave,\n          onClick: this.handleClick,\n          onMouseDown: this.handleMouseDown,\n          onMouseUp: this.handleMouseUp,\n          onTouchMove: this.handleTouchMove\n        };\n\n        // The \"compact\" mode is mainly used as the panorama within Brush\n        if (compact) {\n          return this.renderChart();\n        }\n\n        return React.createElement(\n          'div',\n          _extends({\n            className: classNames('recharts-wrapper', className),\n            style: _extends({}, style, { position: 'relative', cursor: 'default', width: width, height: height })\n          }, events, {\n            ref: function ref(node) {\n              _this3.container = node;\n            }\n          }),\n          this.renderChart(),\n          this.renderLegend(),\n          this.renderTooltip()\n        );\n      }\n    }]);\n\n    return CategoricalChartWrapper;\n  }(Component), _class.displayName = getDisplayName(ChartComponent), _class.propTypes = _extends({}, ChartComponent.propTypes, {\n    syncId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    compact: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    data: PropTypes.arrayOf(PropTypes.object),\n    layout: PropTypes.oneOf(['horizontal', 'vertical']),\n    stackOffset: PropTypes.oneOf(['sign', 'expand', 'none', 'wiggle', 'silhouette']),\n    throttleDelay: PropTypes.number,\n    margin: PropTypes.shape({\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number\n    }),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    onClick: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func\n  }), _class.defaultProps = {\n    layout: 'horizontal',\n    stackOffset: 'none',\n    margin: { top: 5, right: 5, bottom: 5, left: 5 }\n  }, _temp);\n\n\n  return CategoricalChartWrapper;\n};\n\nexport default generateCategoricalChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}