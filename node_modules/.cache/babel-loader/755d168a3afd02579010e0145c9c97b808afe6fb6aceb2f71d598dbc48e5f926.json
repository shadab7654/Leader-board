{"ast":null,"code":"var global = require('./_global'),\n  hide = require('./_hide'),\n  has = require('./_has'),\n  SRC = require('./_uid')('src'),\n  TO_STRING = 'toString',\n  $toString = Function[TO_STRING],\n  TPL = ('' + $toString).split(TO_STRING);\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else {\n    if (!safe) {\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if (O[key]) O[key] = val;else hide(O, key, val);\n    }\n  }\n  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","map":{"version":3,"names":["global","require","hide","has","SRC","TO_STRING","$toString","Function","TPL","split","inspectSource","it","call","module","exports","O","key","val","safe","isFunction","join","String","prototype","toString"],"sources":["/home/alam/Desktop/ReactProject/leaderboard/node_modules/recharts/node_modules/core-js/modules/_redefine.js"],"sourcesContent":["var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});"],"mappings":"AAAA,IAAIA,MAAM,GAAMC,OAAO,CAAC,WAAW,CAAC;EAChCC,IAAI,GAAQD,OAAO,CAAC,SAAS,CAAC;EAC9BE,GAAG,GAASF,OAAO,CAAC,QAAQ,CAAC;EAC7BG,GAAG,GAASH,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;EACpCI,SAAS,GAAG,UAAU;EACtBC,SAAS,GAAGC,QAAQ,CAACF,SAAS,CAAC;EAC/BG,GAAG,GAAS,CAAC,EAAE,GAAGF,SAAS,EAAEG,KAAK,CAACJ,SAAS,CAAC;AAEjDJ,OAAO,CAAC,SAAS,CAAC,CAACS,aAAa,GAAG,UAASC,EAAE,EAAC;EAC7C,OAAOL,SAAS,CAACM,IAAI,CAACD,EAAE,CAAC;AAC3B,CAAC;AAED,CAACE,MAAM,CAACC,OAAO,GAAG,UAASC,CAAC,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAC;EAC3C,IAAIC,UAAU,GAAG,OAAOF,GAAG,IAAI,UAAU;EACzC,IAAGE,UAAU,EAAChB,GAAG,CAACc,GAAG,EAAE,MAAM,CAAC,IAAIf,IAAI,CAACe,GAAG,EAAE,MAAM,EAAED,GAAG,CAAC;EACxD,IAAGD,CAAC,CAACC,GAAG,CAAC,KAAKC,GAAG,EAAC;EAClB,IAAGE,UAAU,EAAChB,GAAG,CAACc,GAAG,EAAEb,GAAG,CAAC,IAAIF,IAAI,CAACe,GAAG,EAAEb,GAAG,EAAEW,CAAC,CAACC,GAAG,CAAC,GAAG,EAAE,GAAGD,CAAC,CAACC,GAAG,CAAC,GAAGR,GAAG,CAACY,IAAI,CAACC,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC;EAC3F,IAAGD,CAAC,KAAKf,MAAM,EAAC;IACde,CAAC,CAACC,GAAG,CAAC,GAAGC,GAAG;EACd,CAAC,MAAM;IACL,IAAG,CAACC,IAAI,EAAC;MACP,OAAOH,CAAC,CAACC,GAAG,CAAC;MACbd,IAAI,CAACa,CAAC,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACnB,CAAC,MAAM;MACL,IAAGF,CAAC,CAACC,GAAG,CAAC,EAACD,CAAC,CAACC,GAAG,CAAC,GAAGC,GAAG,CAAC,KAClBf,IAAI,CAACa,CAAC,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACxB;EACF;EACF;AACA,CAAC,EAAEV,QAAQ,CAACe,SAAS,EAAEjB,SAAS,EAAE,SAASkB,QAAQ,GAAE;EACnD,OAAO,OAAO,IAAI,IAAI,UAAU,IAAI,IAAI,CAACnB,GAAG,CAAC,IAAIE,SAAS,CAACM,IAAI,CAAC,IAAI,CAAC;AACvE,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}