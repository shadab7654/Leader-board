{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _class, _class2, _temp;\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * @fileOverview Z Axis\n */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pureRender from '../util/PureRender';\nvar ZAxis = pureRender(_class = (_temp = _class2 = function (_Component) {\n  _inherits(ZAxis, _Component);\n  function ZAxis() {\n    _classCallCheck(this, ZAxis);\n    return _possibleConstructorReturn(this, (ZAxis.__proto__ || Object.getPrototypeOf(ZAxis)).apply(this, arguments));\n  }\n  _createClass(ZAxis, [{\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n  return ZAxis;\n}(Component), _class2.displayName = 'ZAxis', _class2.propTypes = {\n  // The name of data displayed in the axis\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  // The unit of data displayed in the axis\n  unit: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  // The unique id of z-axis\n  zAxisId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  // The key of data displayed in the axis\n  dataKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func]),\n  // The range of axis\n  range: PropTypes.arrayOf(PropTypes.number),\n  scale: PropTypes.oneOfType([PropTypes.oneOf(['auto', 'linear', 'pow', 'sqrt', 'log', 'identity', 'time', 'band', 'point', 'ordinal', 'quantile', 'quantize', 'utcTime', 'sequential', 'threshold']), PropTypes.func])\n}, _class2.defaultProps = {\n  zAxisId: 0,\n  range: [64, 64],\n  scale: 'auto'\n}, _temp)) || _class;\nexport default ZAxis;","map":null,"metadata":{},"sourceType":"module"}