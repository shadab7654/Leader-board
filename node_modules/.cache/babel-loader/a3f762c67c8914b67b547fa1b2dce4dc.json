{"ast":null,"code":"import _maxBy from 'lodash/maxBy';\nimport _isFunction from 'lodash/isFunction';\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _class, _class2, _temp;\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * @fileOverview The axis of polar coordinate system\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pureRender from '../util/PureRender';\nimport Text from '../component/Text';\nimport Layer from '../container/Layer';\nimport { PRESENTATION_ATTRIBUTES, EVENT_ATTRIBUTES, getPresentationAttributes, filterEventsOfChild } from '../util/ReactUtils';\nimport { polarToCartesian } from '../util/PolarUtils';\nimport { isNumOrStr } from '../util/DataUtils';\nvar PolarRadiusAxis = pureRender(_class = (_temp = _class2 = function (_Component) {\n  _inherits(PolarRadiusAxis, _Component);\n  function PolarRadiusAxis() {\n    _classCallCheck(this, PolarRadiusAxis);\n    return _possibleConstructorReturn(this, (PolarRadiusAxis.__proto__ || Object.getPrototypeOf(PolarRadiusAxis)).apply(this, arguments));\n  }\n  _createClass(PolarRadiusAxis, [{\n    key: 'getTickValueCoord',\n    /**\n     * Calculate the coordinate of tick\n     * @param  {Object} radius The data of a simple tick\n     * @return {Object} (x, y)\n     */\n    value: function getTickValueCoord(_ref) {\n      var radius = _ref.radius;\n      var _props = this.props,\n        angle = _props.angle,\n        cx = _props.cx,\n        cy = _props.cy;\n      return polarToCartesian(cx, cy, radius, angle);\n    }\n  }, {\n    key: 'getTickTextAnchor',\n    value: function getTickTextAnchor() {\n      var orientation = this.props.orientation;\n      var textAnchor = void 0;\n      switch (orientation) {\n        case 'left':\n          textAnchor = 'end';\n          break;\n        case 'right':\n          textAnchor = 'start';\n          break;\n        default:\n          textAnchor = 'middle';\n          break;\n      }\n      return textAnchor;\n    }\n  }, {\n    key: 'renderAxisLine',\n    value: function renderAxisLine() {\n      var _props2 = this.props,\n        cx = _props2.cx,\n        cy = _props2.cy,\n        angle = _props2.angle,\n        ticks = _props2.ticks,\n        axisLine = _props2.axisLine,\n        others = _objectWithoutProperties(_props2, ['cx', 'cy', 'angle', 'ticks', 'axisLine']);\n      var extent = ticks.reduce(function (result, entry) {\n        return [Math.min(result[0], entry.radius), Math.max(result[1], entry.radius)];\n      }, [Infinity, -Infinity]);\n      var point0 = polarToCartesian(cx, cy, extent[0], angle);\n      var point1 = polarToCartesian(cx, cy, extent[1], angle);\n      var props = _extends({}, getPresentationAttributes(others), {\n        fill: 'none'\n      }, getPresentationAttributes(axisLine), {\n        x1: point0.x,\n        y1: point0.y,\n        x2: point1.x,\n        y2: point1.y\n      });\n      return React.createElement('line', _extends({\n        className: 'recharts-polar-radius-axis-line'\n      }, props));\n    }\n  }, {\n    key: 'renderTickItem',\n    value: function renderTickItem(option, props, value) {\n      var tickItem = void 0;\n      if (React.isValidElement(option)) {\n        tickItem = React.cloneElement(option, props);\n      } else if (_isFunction(option)) {\n        tickItem = option(props);\n      } else {\n        tickItem = React.createElement(Text, _extends({}, props, {\n          className: 'recharts-polar-radius-axis-tick-value'\n        }), value);\n      }\n      return tickItem;\n    }\n  }, {\n    key: 'renderTicks',\n    value: function renderTicks() {\n      var _this2 = this;\n      var _props3 = this.props,\n        ticks = _props3.ticks,\n        tick = _props3.tick,\n        angle = _props3.angle,\n        tickFormatter = _props3.tickFormatter,\n        stroke = _props3.stroke,\n        others = _objectWithoutProperties(_props3, ['ticks', 'tick', 'angle', 'tickFormatter', 'stroke']);\n      var textAnchor = this.getTickTextAnchor();\n      var axisProps = getPresentationAttributes(others);\n      var customTickProps = getPresentationAttributes(tick);\n      var items = ticks.map(function (entry, i) {\n        var coord = _this2.getTickValueCoord(entry);\n        var tickProps = _extends({\n          textAnchor: textAnchor,\n          transform: 'rotate(' + (90 - angle) + ', ' + coord.x + ', ' + coord.y + ')'\n        }, axisProps, {\n          stroke: 'none',\n          fill: stroke\n        }, customTickProps, {\n          index: i\n        }, coord, {\n          payload: entry\n        });\n        return React.createElement(Layer, _extends({\n          className: 'recharts-polar-radius-axis-tick',\n          key: 'tick-' + i\n        }, filterEventsOfChild(_this2.props, entry, i)), _this2.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value) : entry.value));\n      });\n      return React.createElement(Layer, {\n        className: 'recharts-polar-radius-axis-ticks'\n      }, items);\n    }\n  }, {\n    key: 'renderLabel',\n    value: function renderLabel() {\n      var label = this.props.label;\n      var _props4 = this.props,\n        ticks = _props4.ticks,\n        angle = _props4.angle,\n        stroke = _props4.stroke,\n        others = _objectWithoutProperties(_props4, ['ticks', 'angle', 'stroke']);\n      var maxRadiusTick = _maxBy(ticks, function (entry) {\n        return entry.radius || 0;\n      });\n      var radius = maxRadiusTick.radius || 0;\n      var coord = this.getTickValueCoord({\n        radius: radius + 10\n      });\n      var props = _extends({}, others, {\n        stroke: 'none',\n        fill: stroke\n      }, coord, {\n        textAnchor: 'middle',\n        transform: 'rotate(' + (90 - angle) + ', ' + coord.x + ', ' + coord.y + ')'\n      });\n      if (React.isValidElement(label)) {\n        return React.cloneElement(label, props);\n      } else if (_isFunction(label)) {\n        return label(props);\n      } else if (isNumOrStr(label)) {\n        return React.createElement(Layer, {\n          className: 'recharts-polar-radius-axis-label'\n        }, React.createElement(Text, props, label));\n      }\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n        ticks = _props5.ticks,\n        axisLine = _props5.axisLine,\n        tick = _props5.tick;\n      if (!ticks || !ticks.length) {\n        return null;\n      }\n      return React.createElement(Layer, {\n        className: 'recharts-polar-radius-axis'\n      }, axisLine && this.renderAxisLine(), tick && this.renderTicks(), this.renderLabel());\n    }\n  }]);\n  return PolarRadiusAxis;\n}(Component), _class2.displayName = 'PolarRadiusAxis', _class2.propTypes = _extends({}, PRESENTATION_ATTRIBUTES, EVENT_ATTRIBUTES, {\n  cx: PropTypes.number,\n  cy: PropTypes.number,\n  hide: PropTypes.bool,\n  angle: PropTypes.number,\n  tickCount: PropTypes.number,\n  ticks: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    radius: PropTypes.value\n  })),\n  orientation: PropTypes.oneOf(['left', 'right', 'middle']),\n  axisLine: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  label: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.element, PropTypes.func]),\n  tick: PropTypes.oneOfType([PropTypes.bool, PropTypes.object, PropTypes.element, PropTypes.func]),\n  stroke: PropTypes.string,\n  tickFormatter: PropTypes.func,\n  domain: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto', 'dataMin', 'dataMax'])])),\n  scale: PropTypes.oneOfType([PropTypes.oneOf(['auto', 'linear', 'pow', 'sqrt', 'log', 'identity', 'time', 'band', 'point', 'ordinal', 'quantile', 'quantize', 'utcTime', 'sequential', 'threshold']), PropTypes.func]),\n  allowDataOverflow: PropTypes.bool\n}), _class2.defaultProps = {\n  cx: 0,\n  cy: 0,\n  angle: 0,\n  orientation: 'right',\n  stroke: '#ccc',\n  axisLine: true,\n  tick: true,\n  tickCount: 5,\n  domain: [0, 'auto'],\n  allowDataOverflow: false,\n  scale: 'auto'\n}, _temp)) || _class;\nexport default PolarRadiusAxis;","map":null,"metadata":{},"sourceType":"module"}