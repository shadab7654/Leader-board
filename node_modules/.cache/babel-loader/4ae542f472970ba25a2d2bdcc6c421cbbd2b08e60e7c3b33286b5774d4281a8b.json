{"ast":null,"code":"import { path } from \"d3-path\";\nimport constant from \"./constant\";\nimport { epsilon, pi, halfPi, tau } from \"./math\";\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n    y10 = y1 - y0,\n    x32 = x3 - x2,\n    y32 = y3 - y2,\n    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n    y01 = y0 - y1,\n    lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n    ox = lo * y01,\n    oy = -lo * x01,\n    x11 = x0 + ox,\n    y11 = y0 + oy,\n    x10 = x1 + ox,\n    y10 = y1 + oy,\n    x00 = (x11 + x10) / 2,\n    y00 = (y11 + y10) / 2,\n    dx = x10 - x11,\n    dy = y10 - y11,\n    d2 = dx * dx + dy * dy,\n    r = r1 - rc,\n    D = x11 * y10 - x10 * y11,\n    d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n    cx0 = (D * dy - dx * d) / d2,\n    cy0 = (-D * dx - dy * d) / d2,\n    cx1 = (D * dy + dx * d) / d2,\n    cy1 = (-D * dx + dy * d) / d2,\n    dx0 = cx0 - x00,\n    dy0 = cy0 - y00,\n    dx1 = cx1 - x00,\n    dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\nexport default function () {\n  var innerRadius = arcInnerRadius,\n    outerRadius = arcOuterRadius,\n    cornerRadius = constant(0),\n    padRadius = null,\n    startAngle = arcStartAngle,\n    endAngle = arcEndAngle,\n    padAngle = arcPadAngle,\n    context = null;\n  function arc() {\n    var buffer,\n      r,\n      r0 = +innerRadius.apply(this, arguments),\n      r1 = +outerRadius.apply(this, arguments),\n      a0 = startAngle.apply(this, arguments) - halfPi,\n      a1 = endAngle.apply(this, arguments) - halfPi,\n      da = Math.abs(a1 - a0),\n      cw = a1 > a0;\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n        a11 = a1,\n        a00 = a0,\n        a10 = a1,\n        da0 = da,\n        da1 = da,\n        ap = padAngle.apply(this, arguments) / 2,\n        rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n        rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n        rc0 = rc,\n        rc1 = rc,\n        t0,\n        t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n          p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n      var x01 = r1 * Math.cos(a01),\n        y01 = r1 * Math.sin(a01),\n        x10 = r0 * Math.cos(a10),\n        y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n          y11 = r1 * Math.sin(a11),\n          x00 = r0 * Math.cos(a00),\n          y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n            ax = x01 - oc[0],\n            ay = y01 - oc[1],\n            bx = x11 - oc[0],\n            by = y11 - oc[1],\n            kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n            lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n      a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n  return arc;\n}","map":{"version":3,"names":["path","constant","epsilon","pi","halfPi","tau","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","x","Math","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","cw","x01","y01","lo","sqrt","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","D","max","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","context","arc","buffer","r0","apply","arguments","a0","a1","da","abs","moveTo","cos","sin","a01","a11","a00","a10","da0","da1","ap","rp","min","rc0","rc1","t0","t1","p0","p1","oc","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","centroid","a","_","length"],"sources":["/home/alam/Desktop/ReactProject/leaderboard/node_modules/d3-shape/src/arc.js"],"sourcesContent":["import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {epsilon, pi, halfPi, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}