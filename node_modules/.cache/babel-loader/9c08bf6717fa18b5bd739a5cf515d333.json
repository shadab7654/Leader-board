{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _dec, _class, _class2, _temp2;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * @fileOverview Pie Chart\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Surface from '../container/Surface';\nimport Legend from '../component/Legend';\nimport Tooltip from '../component/Tooltip';\nimport Pie from '../polar/Pie';\nimport Cell from '../component/Cell';\nimport { getPercentValue, combineEventHandlers } from '../util/DataUtils';\nimport { findChildByType, findAllByType, validateWidthHeight, filterSvgElements, getPresentationAttributes } from '../util/ReactUtils';\nimport { getMaxRadius, polarToCartesian } from '../util/PolarUtils';\nimport composedDataDecorator from '../util/ComposedDataDecorator';\nvar getComposedData = function getComposedData(_ref) {\n  var item = _ref.item;\n  var _item$props = item.props,\n    data = _item$props.data,\n    children = _item$props.children;\n  var presentationProps = getPresentationAttributes(item.props);\n  var cells = findAllByType(children, Cell);\n  if (data && data.length) {\n    return data.map(function (entry, index) {\n      return _extends({\n        payload: entry\n      }, presentationProps, entry, cells && cells[index] && cells[index].props);\n    });\n  }\n  if (cells && cells.length) {\n    return cells.map(function (cell) {\n      return _extends({}, presentationProps, cell.props);\n    });\n  }\n  return [];\n};\nexport var PieChart = (_dec = composedDataDecorator({\n  getComposedData: getComposedData,\n  ChildComponent: Pie\n}), _dec(_class = (_temp2 = _class2 = function (_Component) {\n  _inherits(PieChart, _Component);\n  function PieChart() {\n    var _ref2;\n    var _temp, _this, _ret;\n    _classCallCheck(this, PieChart);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = PieChart.__proto__ || Object.getPrototypeOf(PieChart)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {\n      activeTooltipLabel: '',\n      activeTooltipCoord: {\n        x: 0,\n        y: 0\n      },\n      activeTooltipPayload: [],\n      isTooltipActive: false\n    }, _this.handleMouseEnter = function (el) {\n      var children = _this.props.children;\n      var cx = el.cx,\n        cy = el.cy,\n        outerRadius = el.outerRadius,\n        midAngle = el.midAngle;\n      var tooltipItem = findChildByType(children, Tooltip);\n      if (tooltipItem) {\n        _this.setState({\n          isTooltipActive: true,\n          activeTooltipCoord: polarToCartesian(cx, cy, outerRadius, midAngle),\n          activeTooltipPayload: [el]\n        });\n      }\n    }, _this.handleMouseLeave = function () {\n      var children = _this.props.children;\n      var tooltipItem = findChildByType(children, Tooltip);\n      if (tooltipItem) {\n        _this.setState({\n          isTooltipActive: false\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  _createClass(PieChart, [{\n    key: 'renderLegend',\n    /**\n     * Draw legend\n     * @param  {Array} items             The instances of Pie\n     * @return {ReactElement}            The instance of Legend\n     */\n    value: function renderLegend(items) {\n      var _props = this.props,\n        children = _props.children,\n        allComposedData = _props.allComposedData;\n      var legendItem = findChildByType(children, Legend);\n      if (!legendItem) {\n        return null;\n      }\n      var _props2 = this.props,\n        width = _props2.width,\n        height = _props2.height,\n        margin = _props2.margin;\n      var legendData = legendItem.props && legendItem.props.payload || items.reduce(function (result, child, i) {\n        var nameKey = child.props.nameKey;\n        var data = allComposedData[i];\n        return result.concat(data.map(function (entry) {\n          return {\n            type: legendItem.props.iconType || child.props.legendType,\n            value: entry[nameKey],\n            color: entry.fill,\n            payload: entry\n          };\n        }));\n      }, []);\n      return React.cloneElement(legendItem, _extends({}, Legend.getWithHeight(legendItem, width), {\n        payload: legendData,\n        chartWidth: width,\n        chartHeight: height,\n        margin: margin\n      }));\n    }\n  }, {\n    key: 'renderTooltip',\n    value: function renderTooltip() {\n      var children = this.props.children;\n      var tooltipItem = findChildByType(children, Tooltip);\n      if (!tooltipItem) {\n        return null;\n      }\n      var _props3 = this.props,\n        width = _props3.width,\n        height = _props3.height;\n      var _state = this.state,\n        isTooltipActive = _state.isTooltipActive,\n        activeTooltipLabel = _state.activeTooltipLabel,\n        activeTooltipCoord = _state.activeTooltipCoord,\n        activeTooltipPayload = _state.activeTooltipPayload;\n      var viewBox = {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      };\n      return React.cloneElement(tooltipItem, {\n        viewBox: viewBox,\n        active: isTooltipActive,\n        label: activeTooltipLabel,\n        payload: activeTooltipPayload,\n        coordinate: activeTooltipCoord\n      });\n    }\n\n    /**\n     * Draw the main part of bar chart\n     * @param  {Array} items    All the instance of Pie\n     * @return {ReactComponent} All the instance of Pie\n     */\n  }, {\n    key: 'renderItems',\n    value: function renderItems(items) {\n      var _this2 = this;\n      var _props4 = this.props,\n        width = _props4.width,\n        height = _props4.height,\n        margin = _props4.margin,\n        allComposedData = _props4.allComposedData,\n        onMouseEnter = _props4.onMouseEnter,\n        onMouseLeave = _props4.onMouseLeave,\n        onClick = _props4.onClick;\n      return items.map(function (child, i) {\n        var _child$props = child.props,\n          innerRadius = _child$props.innerRadius,\n          outerRadius = _child$props.outerRadius,\n          childOnMouseEnter = _child$props.onMouseEnter,\n          childOnMouseLeave = _child$props.onMouseLeave,\n          childOnClick = _child$props.onClick;\n        var cx = getPercentValue(child.props.cx, width, width / 2);\n        var cy = getPercentValue(child.props.cy, height, height / 2);\n        var maxRadius = getMaxRadius(width, height, margin);\n        return React.cloneElement(child, {\n          key: child.key || 'recharts-pie-' + i,\n          cx: cx,\n          cy: cy,\n          maxRadius: child.props.maxRadius || Math.sqrt(width * width + height * height) / 2,\n          innerRadius: getPercentValue(innerRadius, maxRadius, 0),\n          outerRadius: getPercentValue(outerRadius, maxRadius, maxRadius * 0.8),\n          composedData: allComposedData[i],\n          onMouseEnter: combineEventHandlers(_this2.handleMouseEnter, onMouseEnter, childOnMouseEnter),\n          onMouseLeave: combineEventHandlers(_this2.handleMouseLeave, onMouseLeave, childOnMouseLeave),\n          onClick: combineEventHandlers(null, onClick, childOnClick)\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!validateWidthHeight(this)) {\n        return null;\n      }\n      var _props5 = this.props,\n        style = _props5.style,\n        children = _props5.children,\n        className = _props5.className,\n        width = _props5.width,\n        height = _props5.height,\n        others = _objectWithoutProperties(_props5, ['style', 'children', 'className', 'width', 'height']);\n      var items = findAllByType(children, Pie);\n      var attrs = getPresentationAttributes(others);\n      return React.createElement('div', {\n        className: classNames('recharts-wrapper', className),\n        style: _extends({}, style, {\n          position: 'relative',\n          cursor: 'default',\n          width: width,\n          height: height\n        })\n      }, React.createElement(Surface, _extends({}, attrs, {\n        width: width,\n        height: height\n      }), this.renderItems(items), filterSvgElements(children)), this.renderLegend(items), this.renderTooltip());\n    }\n  }]);\n  return PieChart;\n}(Component), _class2.displayName = 'PieChart', _class2.propTypes = {\n  allComposedData: PropTypes.array,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  margin: PropTypes.shape({\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number\n  }),\n  title: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  className: PropTypes.string,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onClick: PropTypes.func\n}, _class2.defaultProps = {\n  style: {},\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n}, _temp2)) || _class);\nexport default PieChart;","map":null,"metadata":{},"sourceType":"module"}