{"ast":null,"code":"var _jsxFileName = \"/home/alam/Desktop/ReactProject/leaderboard/src/Pages/UserList/UserList.jsx\";\nimport React from 'react';\nimport \"./userlist.css\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nexport default function UserList() {\n  var columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: function valueGetter(params) {\n      return \"\".concat(params.row.firstName || '', \" \").concat(params.row.lastName || '');\n    }\n  }];\n  var rows = [{\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"UserList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    checkboxSelection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","DataGrid","GridColDef","GridValueGetterParams","UserList","columns","field","headerName","width","type","description","sortable","valueGetter","params","row","firstName","lastName","rows","id","age"],"sources":["/home/alam/Desktop/ReactProject/leaderboard/src/Pages/UserList/UserList.jsx"],"sourcesContent":["import React from 'react'\nimport \"./userlist.css\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\n\n\nexport default function UserList() {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n    },\n  ];\n  \n  const rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  ];\n  \n  return (\n    <div className='UserList'>\n      <DataGrid rows={rows} columns={columns} pageSize={5} rowsPerPageOptions={[5]} checkboxSelection />\n\n\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,QAAQ,EAAEC,UAAU,EAAEC,qBAAqB,QAAQ,kBAAkB;AAG9E,eAAe,SAASC,QAAQ,GAAG;EACjC,IAAMC,OAAqB,GAAG,CAC5B;IAAEC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC5C;IAAEF,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC5D;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC1D;IACEF,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,KAAK;IACjBE,IAAI,EAAE,QAAQ;IACdD,KAAK,EAAE;EACT,CAAC,EACD;IACEF,KAAK,EAAE,UAAU;IACjBC,UAAU,EAAE,WAAW;IACvBG,WAAW,EAAE,qDAAqD;IAClEC,QAAQ,EAAE,KAAK;IACfH,KAAK,EAAE,GAAG;IACVI,WAAW,EAAE,qBAACC,MAA6B;MAAA,iBACtCA,MAAM,CAACC,GAAG,CAACC,SAAS,IAAI,EAAE,cAAIF,MAAM,CAACC,GAAG,CAACE,QAAQ,IAAI,EAAE;IAAA;EAC9D,CAAC,CACF;EAED,IAAMC,IAAI,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,MAAM;IAAED,SAAS,EAAE,KAAK;IAAEI,GAAG,EAAE;EAAG,CAAC,EACtD;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,WAAW;IAAED,SAAS,EAAE,QAAQ;IAAEI,GAAG,EAAE;EAAG,CAAC,EAC9D;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,WAAW;IAAED,SAAS,EAAE,OAAO;IAAEI,GAAG,EAAE;EAAG,CAAC,EAC7D;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,OAAO;IAAED,SAAS,EAAE,MAAM;IAAEI,GAAG,EAAE;EAAG,CAAC,EACxD;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,WAAW;IAAED,SAAS,EAAE,UAAU;IAAEI,GAAG,EAAE;EAAK,CAAC,EAClE;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,YAAY;IAAED,SAAS,EAAE,IAAI;IAAEI,GAAG,EAAE;EAAI,CAAC,EAC5D;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,UAAU;IAAED,SAAS,EAAE,SAAS;IAAEI,GAAG,EAAE;EAAG,CAAC,EAC9D;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,SAAS;IAAED,SAAS,EAAE,SAAS;IAAEI,GAAG,EAAE;EAAG,CAAC,EAC7D;IAAED,EAAE,EAAE,CAAC;IAAEF,QAAQ,EAAE,OAAO;IAAED,SAAS,EAAE,QAAQ;IAAEI,GAAG,EAAE;EAAG,CAAC,CAC3D;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB,oBAAC,QAAQ;IAAC,IAAI,EAAEF,IAAK;IAAC,OAAO,EAAEZ,OAAQ;IAAC,QAAQ,EAAE,CAAE;IAAC,kBAAkB,EAAE,CAAC,CAAC,CAAE;IAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAG9F;AAEV"},"metadata":{},"sourceType":"module"}