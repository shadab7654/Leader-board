{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _class, _class2, _temp;\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * @fileOverview Cross\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport pureRender from '../util/PureRender';\nimport { isNumber } from '../util/DataUtils';\nimport { PRESENTATION_ATTRIBUTES, getPresentationAttributes } from '../util/ReactUtils';\nvar Cross = pureRender(_class = (_temp = _class2 = function (_Component) {\n  _inherits(Cross, _Component);\n  function Cross() {\n    _classCallCheck(this, Cross);\n    return _possibleConstructorReturn(this, (Cross.__proto__ || Object.getPrototypeOf(Cross)).apply(this, arguments));\n  }\n  _createClass(Cross, [{\n    key: 'getPath',\n    value: function getPath(x, y, width, height, top, left) {\n      return 'M' + x + ',' + top + 'v' + height + 'M' + left + ',' + y + 'h' + width;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n        x = _props.x,\n        y = _props.y,\n        width = _props.width,\n        height = _props.height,\n        top = _props.top,\n        left = _props.left,\n        className = _props.className;\n      if (!isNumber(x) || !isNumber(y) || !isNumber(width) || !isNumber(height) || !isNumber(top) || !isNumber(left)) {\n        return null;\n      }\n      return React.createElement('path', _extends({}, getPresentationAttributes(this.props), {\n        className: classNames('recharts-cross', className),\n        d: this.getPath(x, y, width, height, top, left)\n      }));\n    }\n  }]);\n  return Cross;\n}(Component), _class2.displayName = 'Cross', _class2.propTypes = _extends({}, PRESENTATION_ATTRIBUTES, {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  top: PropTypes.number,\n  left: PropTypes.number,\n  className: PropTypes.string\n}), _class2.defaultProps = {\n  x: 0,\n  y: 0,\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0\n}, _temp)) || _class;\nexport default Cross;","map":null,"metadata":{},"sourceType":"module"}