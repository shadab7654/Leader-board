"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _warning = _interopRequireDefault(require("warning"));

var _reactRouter = require("react-router");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class TransitionSwitch extends React.Component {
  componentDidUpdate(prevProps) {
    (0, _warning.default)(!(prevProps.overrideLocation && !this.props.overrideLocation), '<TransitionSwitch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
    (0, _warning.default)(!(!prevProps.overrideLocation && this.props.overrideLocation), '<TransitionSwitch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
  }

  render() {
    const {
      children,
      render,
      component,
      createKey,
      match: routeMatch
    } = this.props;
    const location = this.props.overrideLocation || this.props.location;
    let match, element;
    React.Children.forEach(children, child => {
      if (match == null && React.isValidElement(child)) {
        const {
          path: pathProp,
          exact,
          strict,
          sensitive,
          from
        } = child.props;
        const path = pathProp || from;
        element = child;
        match = path ? (0, _reactRouter.matchPath)(location.pathname, {
          path,
          exact,
          strict,
          sensitive
        }) : routeMatch;
      }
    });
    const routeElement = match ? React.cloneElement(element, {
      location,
      computedMatch: match,
      key: createKey(element, match)
    }) : null;
    const props = {
      location,
      match,
      children: routeElement
    };
    if (component) return React.createElement(component, props);
    if (render) return render(props);
    return routeElement;
  }

}

_defineProperty(TransitionSwitch, "propTypes", {
  children: _propTypes.default.node,
  location: _propTypes.default.object,
  createKey: _propTypes.default.func
});

_defineProperty(TransitionSwitch, "defaultProps", {
  createKey(child, match) {
    return child.key != null ? child.key : match.url;
  }

});

const TransitionSwitch2 = (0, _reactRouter.withRouter)(TransitionSwitch);

const TransitionSwitch3 = (_ref) => {
  let {
    location
  } = _ref,
      props = _objectWithoutProperties(_ref, ["location"]);

  return React.createElement(TransitionSwitch2, _extends({
    overrideLocation: location
  }, props));
};

var _default = TransitionSwitch3;
exports.default = _default;