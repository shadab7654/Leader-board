"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _warning = _interopRequireDefault(require("warning"));

var _reactRouter = require("react-router");

var TransitionSwitch =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(TransitionSwitch, _React$Component);

  function TransitionSwitch() {
    (0, _classCallCheck2["default"])(this, TransitionSwitch);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(TransitionSwitch).apply(this, arguments));
  }

  (0, _createClass2["default"])(TransitionSwitch, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      (0, _warning["default"])(!(prevProps.overrideLocation && !this.props.overrideLocation), '<TransitionSwitch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
      (0, _warning["default"])(!(!prevProps.overrideLocation && this.props.overrideLocation), '<TransitionSwitch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          render = _this$props.render,
          component = _this$props.component,
          createKey = _this$props.createKey,
          routeMatch = _this$props.match;
      var location = this.props.overrideLocation || this.props.location;
      var match, element;
      React.Children.forEach(children, function (child) {
        if (match == null && React.isValidElement(child)) {
          var _child$props = child.props,
              pathProp = _child$props.path,
              exact = _child$props.exact,
              strict = _child$props.strict,
              sensitive = _child$props.sensitive,
              from = _child$props.from;
          var path = pathProp || from;
          element = child;
          match = path ? (0, _reactRouter.matchPath)(location.pathname, {
            path: path,
            exact: exact,
            strict: strict,
            sensitive: sensitive
          }) : routeMatch;
        }
      });
      var routeElement = match ? React.cloneElement(element, {
        location: location,
        computedMatch: match,
        key: createKey(element, match)
      }) : null;
      var props = {
        location: location,
        match: match,
        children: routeElement
      };
      if (component) return React.createElement(component, props);
      if (render) return render(props);
      return routeElement;
    }
  }]);
  return TransitionSwitch;
}(React.Component);

(0, _defineProperty2["default"])(TransitionSwitch, "propTypes", {
  children: _propTypes["default"].node,
  location: _propTypes["default"].object,
  createKey: _propTypes["default"].func
});
(0, _defineProperty2["default"])(TransitionSwitch, "defaultProps", {
  createKey: function createKey(child, match) {
    return child.key != null ? child.key : match.url;
  }
});
var TransitionSwitch2 = (0, _reactRouter.withRouter)(TransitionSwitch);

var TransitionSwitch3 = function TransitionSwitch3(_ref) {
  var location = _ref.location,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["location"]);
  return React.createElement(TransitionSwitch2, (0, _extends2["default"])({
    overrideLocation: location
  }, props));
};

var _default = TransitionSwitch3;
exports["default"] = _default;